{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/fra-atlas-map.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw/dist/leaflet.draw.js\";\nimport shp from \"shpjs\";\n\ninterface FRAAtlasMapProps {\n  showDistricts: boolean;\n  showVillages: boolean;\n}\n\nexport default function FRAAtlasMap({\n  showDistricts,\n  showVillages,\n}: FRAAtlasMapProps) {\n  const mapRef = useRef<L.Map | null>(null);\n  const districtLayerRef = useRef<L.GeoJSON<any> | null>(null);\n  const villageLayerRef = useRef<L.GeoJSON<any> | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current) return; // prevent multiple inits\n\n    const map = L.map(\"map\", { center: [23.5, 78.5], zoom: 6 });\n    mapRef.current = map;\n\n    // Base layers\n    const osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution: \"© OpenStreetMap\",\n    }).addTo(map);\n\n    const esriSat = L.tileLayer(\n      \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n      { attribution: \"© Esri, Maxar\" }\n    );\n    const esriLabels = L.tileLayer(\n      \"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\",\n      { attribution: \"© Esri\" }\n    );\n    const satelliteHybrid = L.layerGroup([esriSat, esriLabels]);\n\n    L.control.layers(\n      { OpenStreetMap: osm, \"Satellite Hybrid\": satelliteHybrid },\n      {}\n    ).addTo(map);\n\n    // Load district & village GeoJSON\n    fetch(\"/assets/india_dist_demo.geojson\")\n      .then((res) => res.json())\n      .then((data) => {\n        districtLayerRef.current = L.geoJSON(data, {\n          style: { color: \"#15803d\", weight: 2, fillOpacity: 0 },\n        });\n      });\n\n    fetch(\"/assets/india_village_demo.geojson\")\n      .then((res) => res.json())\n      .then((data) => {\n        villageLayerRef.current = L.geoJSON(data, {\n          style: { color: \"#65a30d\", weight: 1, fillOpacity: 0 },\n        });\n      });\n\n    // Coordinates box (green styling)\n    const CoordsControl = L.Control.extend({\n        onAdd: function () {\n          const div = L.DomUtil.create(\n            \"div\",\n            \"leaflet-bar px-3 py-1 rounded shadow text-sm bg-green-600 text-white font-medium\"\n          );\n          div.id = \"coords\";\n          div.innerHTML = \"Lat: -- , Lng: --\";\n          return div;\n        },\n      });\n\n      new CoordsControl({ position: \"bottomleft\" }).addTo(map);\n\n    map.on(\"mousemove\", (e: { latlng: { lat: number; lng: number; }; }) => {\n      const el = document.getElementById(\"coords\");\n      if (el)\n        el.innerHTML = `Lat: ${e.latlng.lat.toFixed(5)} , Lng: ${e.latlng.lng.toFixed(5)}`;\n    });\n\n    // Shapefile upload\n    const fileInput = document.getElementById(\"shapefileUpload\") as HTMLInputElement;\n    if (fileInput) {\n      fileInput.addEventListener(\"change\", (e: any) => {\n        const file = e.target.files[0];\n        if (!file) return;\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (!reader.result) return;\n          shp(reader.result).then((geojson: any) => {\n            const fraPattaLayer = L.geoJSON(geojson, {\n              style: { color: \"#047857\", weight: 3, fillOpacity: 0 },\n              onEachFeature: (feature: { properties: any; }, layer: { bindPopup: (arg0: string) => void; }) => {\n                if (feature.properties) {\n                  layer.bindPopup(JSON.stringify(feature.properties));\n                }\n              },\n            }).addTo(map);\n            map.fitBounds(fraPattaLayer.getBounds());\n          });\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    }\n\n    // Draw tools\n    const drawnItems = new L.FeatureGroup();\n    map.addLayer(drawnItems);\n\n    const drawControl = new L.Control.Draw({\n      edit: { featureGroup: drawnItems, remove: true },\n      draw: {\n        polygon: {\n          allowIntersection: false,\n          showArea: true,\n          shapeOptions: { color: \"#22c55e\" },\n        },\n        rectangle: { shapeOptions: { color: \"#16a34a\" } },\n        polyline: false,\n        circle: false,\n        marker: false,\n      },\n    });\n    map.addControl(drawControl);\n\n    map.on(L.Draw.Event.CREATED, (e: any) => {\n      const layer = e.layer;\n      drawnItems.addLayer(layer);\n      layer.bindPopup(\"Custom FRA Claim\").openPopup();\n    });\n\n    // Export to GeoJSON\n    (window as any).exportToGeoJSON = () => {\n      const data = drawnItems.toGeoJSON();\n      const blob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"fra_claims.geojson\";\n      a.click();\n    };\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  // Toggle districts/villages dynamically\n  useEffect(() => {\n    const map = mapRef.current;\n    if (!map) return;\n\n    if (showDistricts && districtLayerRef.current) {\n      districtLayerRef.current.addTo(map);\n    } else {\n      districtLayerRef.current?.remove();\n    }\n\n    if (showVillages && villageLayerRef.current) {\n      villageLayerRef.current.addTo(map);\n    } else {\n      villageLayerRef.current?.remove();\n    }\n  }, [showDistricts, showVillages]);\n\n  return <div id=\"map\" className=\"h-full w-full rounded-lg shadow-inner\" />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAGA;AACA;;;AAPA;;;;;;;AAce,SAAS,YAAY,KAGjB;QAHiB,EAClC,aAAa,EACb,YAAY,EACK,GAHiB;;IAIlC,MAAM,SAAS,IAAA,uKAAM,EAAe;IACpC,MAAM,mBAAmB,IAAA,uKAAM,EAAwB;IACvD,MAAM,kBAAkB,IAAA,uKAAM,EAAwB;IAEtD,IAAA,0KAAS;iCAAC;YACR,IAAI,OAAO,OAAO,EAAE,QAAQ,yBAAyB;YAErD,MAAM,MAAM,+JAAC,CAAC,GAAG,CAAC,OAAO;gBAAE,QAAQ;oBAAC;oBAAM;iBAAK;gBAAE,MAAM;YAAE;YACzD,OAAO,OAAO,GAAG;YAEjB,cAAc;YACd,MAAM,MAAM,+JAAC,CAAC,SAAS,CAAC,sDAAsD;gBAC5E,SAAS;gBACT,aAAa;YACf,GAAG,KAAK,CAAC;YAET,MAAM,UAAU,+JAAC,CAAC,SAAS,CACzB,iGACA;gBAAE,aAAa;YAAgB;YAEjC,MAAM,aAAa,+JAAC,CAAC,SAAS,CAC5B,yHACA;gBAAE,aAAa;YAAS;YAE1B,MAAM,kBAAkB,+JAAC,CAAC,UAAU,CAAC;gBAAC;gBAAS;aAAW;YAE1D,+JAAC,CAAC,OAAO,CAAC,MAAM,CACd;gBAAE,eAAe;gBAAK,oBAAoB;YAAgB,GAC1D,CAAC,GACD,KAAK,CAAC;YAER,kCAAkC;YAClC,MAAM,mCACH,IAAI;yCAAC,CAAC,MAAQ,IAAI,IAAI;wCACtB,IAAI;yCAAC,CAAC;oBACL,iBAAiB,OAAO,GAAG,+JAAC,CAAC,OAAO,CAAC,MAAM;wBACzC,OAAO;4BAAE,OAAO;4BAAW,QAAQ;4BAAG,aAAa;wBAAE;oBACvD;gBACF;;YAEF,MAAM,sCACH,IAAI;yCAAC,CAAC,MAAQ,IAAI,IAAI;wCACtB,IAAI;yCAAC,CAAC;oBACL,gBAAgB,OAAO,GAAG,+JAAC,CAAC,OAAO,CAAC,MAAM;wBACxC,OAAO;4BAAE,OAAO;4BAAW,QAAQ;4BAAG,aAAa;wBAAE;oBACvD;gBACF;;YAEF,kCAAkC;YAClC,MAAM,gBAAgB,+JAAC,CAAC,OAAO,CAAC,MAAM,CAAC;gBACnC,KAAK;2DAAE;wBACL,MAAM,MAAM,+JAAC,CAAC,OAAO,CAAC,MAAM,CAC1B,OACA;wBAEF,IAAI,EAAE,GAAG;wBACT,IAAI,SAAS,GAAG;wBAChB,OAAO;oBACT;;YACF;YAEA,IAAI,cAAc;gBAAE,UAAU;YAAa,GAAG,KAAK,CAAC;YAEtD,IAAI,EAAE,CAAC;yCAAa,CAAC;oBACnB,MAAM,KAAK,SAAS,cAAc,CAAC;oBACnC,IAAI,IACF,GAAG,SAAS,GAAG,AAAC,QAAyC,OAAlC,EAAE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAG,YAAkC,OAAxB,EAAE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;gBAClF;;YAEA,mBAAmB;YACnB,MAAM,YAAY,SAAS,cAAc,CAAC;YAC1C,IAAI,WAAW;gBACb,UAAU,gBAAgB,CAAC;6CAAU,CAAC;wBACpC,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;wBAC9B,IAAI,CAAC,MAAM;wBACX,MAAM,SAAS,IAAI;wBACnB,OAAO,MAAM;qDAAG;gCACZ,IAAI,CAAC,OAAO,MAAM,EAAE;gCACtB,IAAA,mJAAG,EAAC,OAAO,MAAM,EAAE,IAAI;6DAAC,CAAC;wCACvB,MAAM,gBAAgB,+JAAC,CAAC,OAAO,CAAC,SAAS;4CACvC,OAAO;gDAAE,OAAO;gDAAW,QAAQ;gDAAG,aAAa;4CAAE;4CACrD,aAAa;uFAAE,CAAC,SAA+B;oDAC7C,IAAI,QAAQ,UAAU,EAAE;wDACtB,MAAM,SAAS,CAAC,KAAK,SAAS,CAAC,QAAQ,UAAU;oDACnD;gDACF;;wCACF,GAAG,KAAK,CAAC;wCACT,IAAI,SAAS,CAAC,cAAc,SAAS;oCACvC;;4BACF;;wBACA,OAAO,iBAAiB,CAAC;oBAC3B;;YACF;YAEA,aAAa;YACb,MAAM,aAAa,IAAI,+JAAC,CAAC,YAAY;YACrC,IAAI,QAAQ,CAAC;YAEb,MAAM,cAAc,IAAI,+JAAC,CAAC,OAAO,CAAC,IAAI,CAAC;gBACrC,MAAM;oBAAE,cAAc;oBAAY,QAAQ;gBAAK;gBAC/C,MAAM;oBACJ,SAAS;wBACP,mBAAmB;wBACnB,UAAU;wBACV,cAAc;4BAAE,OAAO;wBAAU;oBACnC;oBACA,WAAW;wBAAE,cAAc;4BAAE,OAAO;wBAAU;oBAAE;oBAChD,UAAU;oBACV,QAAQ;oBACR,QAAQ;gBACV;YACF;YACA,IAAI,UAAU,CAAC;YAEf,IAAI,EAAE,CAAC,+JAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;yCAAE,CAAC;oBAC5B,MAAM,QAAQ,EAAE,KAAK;oBACrB,WAAW,QAAQ,CAAC;oBACpB,MAAM,SAAS,CAAC,oBAAoB,SAAS;gBAC/C;;YAEA,oBAAoB;YACnB,OAAe,eAAe;yCAAG;oBAChC,MAAM,OAAO,WAAW,SAAS;oBACjC,MAAM,OAAO,IAAI,KAAK;wBAAC,KAAK,SAAS,CAAC;qBAAM,EAAE;wBAAE,MAAM;oBAAmB;oBACzE,MAAM,MAAM,IAAI,eAAe,CAAC;oBAChC,MAAM,IAAI,SAAS,aAAa,CAAC;oBACjC,EAAE,IAAI,GAAG;oBACT,EAAE,QAAQ,GAAG;oBACb,EAAE,KAAK;gBACT;;YAEA;yCAAO;oBACL,IAAI,MAAM;gBACZ;;QACF;gCAAG,EAAE;IAEL,wCAAwC;IACxC,IAAA,0KAAS;iCAAC;YACR,MAAM,MAAM,OAAO,OAAO;YAC1B,IAAI,CAAC,KAAK;YAEV,IAAI,iBAAiB,iBAAiB,OAAO,EAAE;gBAC7C,iBAAiB,OAAO,CAAC,KAAK,CAAC;YACjC,OAAO;oBACL;iBAAA,4BAAA,iBAAiB,OAAO,cAAxB,gDAAA,0BAA0B,MAAM;YAClC;YAEA,IAAI,gBAAgB,gBAAgB,OAAO,EAAE;gBAC3C,gBAAgB,OAAO,CAAC,KAAK,CAAC;YAChC,OAAO;oBACL;iBAAA,2BAAA,gBAAgB,OAAO,cAAvB,+CAAA,yBAAyB,MAAM;YACjC;QACF;gCAAG;QAAC;QAAe;KAAa;IAEhC,qBAAO,6LAAC;QAAI,IAAG;QAAM,WAAU;;;;;;AACjC;GA/JwB;KAAA","debugId":null}}]
}