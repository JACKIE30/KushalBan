{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/AIScrutinyPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Brain,\n  FileText,\n  MapPin,\n  Satellite,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Eye,\n  TrendingUp,\n  Zap,\n  X,\n  Maximize2,\n  Minimize2,\n  RotateCw,\n  Download,\n  MessageSquare,\n  Clock,\n  Shield,\n  Target\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\nimport { Button } from '../../../components/ui/button';\nimport { Badge } from '../../../components/ui/badge';\nimport { Progress } from '../../../components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../../components/ui/tabs';\nimport { Alert, AlertDescription } from '../../../components/ui/alert';\nimport { Separator } from '../../../components/ui/separator';\n\ninterface AIAnalysisResult {\n  id: string;\n  type: 'document' | 'map' | 'satellite';\n  name: string;\n  confidence: number;\n  status: 'valid' | 'invalid' | 'suspicious' | 'missing';\n  issues: string[];\n  suggestions: string[];\n  processingTime: number;\n}\n\ninterface ClaimAnalysis {\n  claimId: string;\n  overallScore: number;\n  recommendation: 'approve' | 'reject' | 'review';\n  confidence: number;\n  analysisResults: AIAnalysisResult[];\n  missingFields: string[];\n  completionPercentage: number;\n  riskLevel: 'low' | 'medium' | 'high';\n  lastAnalyzed: string;\n}\n\ninterface AIScrutinyPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  claimId?: string;\n  onRecommendationAccept?: (recommendation: string) => void;\n}\n\nconst mockAnalysisData: ClaimAnalysis = {\n  claimId: \"FRA-2024-001\",\n  overallScore: 78,\n  recommendation: 'review',\n  confidence: 85,\n  completionPercentage: 92,\n  riskLevel: 'medium',\n  lastAnalyzed: '2024-08-31T10:30:00Z',\n  missingFields: ['Community Certificate', 'Land Survey Sketch'],\n  analysisResults: [\n    {\n      id: '1',\n      type: 'document',\n      name: 'Aadhar Card',\n      confidence: 95,\n      status: 'valid',\n      issues: [],\n      suggestions: [],\n      processingTime: 1.2\n    },\n    {\n      id: '2',\n      type: 'document',\n      name: 'Caste Certificate',\n      confidence: 88,\n      status: 'valid',\n      issues: ['Minor text blur detected'],\n      suggestions: ['Request higher resolution scan'],\n      processingTime: 2.1\n    },\n    {\n      id: '3',\n      type: 'satellite',\n      name: 'Land Verification',\n      confidence: 72,\n      status: 'suspicious',\n      issues: ['Boundary mismatch with survey records', 'Forest encroachment detected'],\n      suggestions: ['Ground verification recommended', 'Update boundary coordinates'],\n      processingTime: 5.8\n    },\n    {\n      id: '4',\n      type: 'map',\n      name: 'GIS Mapping',\n      confidence: 81,\n      status: 'valid',\n      issues: ['Minor coordinate deviation'],\n      suggestions: ['Cross-verify with revenue records'],\n      processingTime: 3.2\n    }\n  ]\n};\n\nexport function AIScrutinyPanel({ isOpen, onClose, claimId, onRecommendationAccept }: AIScrutinyPanelProps) {\n  const [analysisData, setAnalysisData] = useState<ClaimAnalysis>(mockAnalysisData);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  const runAnalysis = () => {\n    setIsAnalyzing(true);\n    // Simulate AI analysis\n    setTimeout(() => {\n      setIsAnalyzing(false);\n      setAnalysisData(prev => ({\n        ...prev,\n        lastAnalyzed: new Date().toISOString()\n      }));\n    }, 3000);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'valid': return 'text-green-600 bg-green-50 border-green-200';\n      case 'invalid': return 'text-red-600 bg-red-50 border-red-200';\n      case 'suspicious': return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      case 'missing': return 'text-gray-600 bg-gray-50 border-gray-200';\n      default: return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  };\n\n  const getRecommendationColor = (recommendation: string) => {\n    switch (recommendation) {\n      case 'approve': return 'text-green-700 bg-green-100 border-green-300';\n      case 'reject': return 'text-red-700 bg-red-100 border-red-300';\n      case 'review': return 'text-yellow-700 bg-yellow-100 border-yellow-300';\n      default: return 'text-gray-700 bg-gray-100 border-gray-300';\n    }\n  };\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case 'low': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'high': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/20 backdrop-blur-sm\">\n      <div className={`bg-white rounded-2xl shadow-2xl border border-gray-200 transition-all duration-300 ${\n        isExpanded ? 'w-full h-full' : 'w-full max-w-6xl h-[90vh]'\n      }`}>\n        <div className=\"flex flex-col h-full\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 bg-gradient-to-r from-green-50 to-emerald-50\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-r from-green-600 to-emerald-700 rounded-xl flex items-center justify-center\">\n                <Brain className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-900\">AI Claim Scrutiny</h2>\n                <p className=\"text-sm text-gray-600\">Claim ID: {analysisData.claimId}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={runAnalysis}\n                disabled={isAnalyzing}\n                className=\"flex items-center space-x-2\"\n              >\n                <RotateCw className={`w-4 h-4 ${isAnalyzing ? 'animate-spin' : ''}`} />\n                <span>{isAnalyzing ? 'Analyzing...' : 'Re-analyze'}</span>\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => setIsExpanded(!isExpanded)}>\n                {isExpanded ? <Minimize2 className=\"w-4 h-4\" /> : <Maximize2 className=\"w-4 h-4\" />}\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 overflow-hidden\">\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"h-full flex flex-col\">\n              <TabsList className=\"mx-6 mt-4 grid w-fit grid-cols-4\">\n                <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n                <TabsTrigger value=\"documents\">Documents</TabsTrigger>\n                <TabsTrigger value=\"mapping\">Mapping</TabsTrigger>\n                <TabsTrigger value=\"recommendations\">Actions</TabsTrigger>\n              </TabsList>\n\n              <div className=\"flex-1 overflow-y-auto p-6\">\n                <TabsContent value=\"overview\" className=\"space-y-6 mt-0\">\n                  {/* Overall Analysis */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                    <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 border-green-200\">\n                      <CardHeader className=\"pb-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-base\">Overall Score</CardTitle>\n                          <Shield className=\"w-5 h-5 text-green-600\" />\n                        </div>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-3xl font-bold text-green-700 mb-2\">{analysisData.overallScore}%</div>\n                        <Progress value={analysisData.overallScore} className=\"h-2 mb-2\" />\n                        <p className=\"text-sm text-green-600\">AI Confidence: {analysisData.confidence}%</p>\n                      </CardContent>\n                    </Card>\n\n                    <Card className={`border-2 ${getRecommendationColor(analysisData.recommendation)}`}>\n                      <CardHeader className=\"pb-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-base\">AI Recommendation</CardTitle>\n                          <Target className=\"w-5 h-5\" />\n                        </div>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-2xl font-bold capitalize mb-2\">{analysisData.recommendation}</div>\n                        <Badge variant=\"outline\" className={`${getRiskColor(analysisData.riskLevel)} border-current`}>\n                          Risk: {analysisData.riskLevel.toUpperCase()}\n                        </Badge>\n                      </CardContent>\n                    </Card>\n\n                    <Card>\n                      <CardHeader className=\"pb-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-base\">Completion</CardTitle>\n                          <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n                        </div>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"text-3xl font-bold text-blue-700 mb-2\">{analysisData.completionPercentage}%</div>\n                        <p className=\"text-sm text-gray-600\">{analysisData.missingFields.length} fields missing</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* Analysis Timeline */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center\">\n                        <Clock className=\"w-5 h-5 mr-2 text-gray-600\" />\n                        Analysis Timeline\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        {analysisData.analysisResults.map((result, index) => (\n                          <div key={result.id} className=\"flex items-center space-x-4 p-3 bg-gray-50 rounded-lg\">\n                            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                              result.type === 'document' ? 'bg-blue-100 text-blue-600' :\n                              result.type === 'satellite' ? 'bg-purple-100 text-purple-600' :\n                              'bg-green-100 text-green-600'\n                            }`}>\n                              {result.type === 'document' ? <FileText className=\"w-4 h-4\" /> :\n                               result.type === 'satellite' ? <Satellite className=\"w-4 h-4\" /> :\n                               <MapPin className=\"w-4 h-4\" />}\n                            </div>\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center justify-between\">\n                                <span className=\"font-medium\">{result.name}</span>\n                                <Badge className={`${getStatusColor(result.status)} border`}>\n                                  {result.status}\n                                </Badge>\n                              </div>\n                              <p className=\"text-sm text-gray-600\">\n                                Processed in {result.processingTime}s • Confidence: {result.confidence}%\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Missing Fields */}\n                  {analysisData.missingFields.length > 0 && (\n                    <Alert className=\"border-yellow-200 bg-yellow-50\">\n                      <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n                      <AlertDescription>\n                        <div className=\"font-medium text-yellow-800 mb-2\">Missing Required Documents:</div>\n                        <ul className=\"list-disc list-inside space-y-1 text-yellow-700\">\n                          {analysisData.missingFields.map((field, index) => (\n                            <li key={index}>{field}</li>\n                          ))}\n                        </ul>\n                      </AlertDescription>\n                    </Alert>\n                  )}\n                </TabsContent>\n\n                <TabsContent value=\"documents\" className=\"space-y-4 mt-0\">\n                  {analysisData.analysisResults\n                    .filter(result => result.type === 'document')\n                    .map((result) => (\n                    <Card key={result.id} className=\"border-l-4 border-l-blue-500\">\n                      <CardHeader>\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-base flex items-center\">\n                            <FileText className=\"w-4 h-4 mr-2\" />\n                            {result.name}\n                          </CardTitle>\n                          <div className=\"flex items-center space-x-2\">\n                            <Badge className={`${getStatusColor(result.status)} border`}>\n                              {result.status}\n                            </Badge>\n                            <span className=\"text-sm text-gray-600\">{result.confidence}% confidence</span>\n                          </div>\n                        </div>\n                      </CardHeader>\n                      <CardContent>\n                        <Progress value={result.confidence} className=\"h-2 mb-4\" />\n                        {result.issues.length > 0 && (\n                          <div className=\"mb-3\">\n                            <h4 className=\"font-medium text-red-700 mb-2\">Issues Detected:</h4>\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-red-600\">\n                              {result.issues.map((issue, index) => (\n                                <li key={index}>{issue}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                        {result.suggestions.length > 0 && (\n                          <div>\n                            <h4 className=\"font-medium text-blue-700 mb-2\">AI Suggestions:</h4>\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-blue-600\">\n                              {result.suggestions.map((suggestion, index) => (\n                                <li key={index}>{suggestion}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  ))}\n                </TabsContent>\n\n                <TabsContent value=\"mapping\" className=\"space-y-4 mt-0\">\n                  {analysisData.analysisResults\n                    .filter(result => result.type === 'map' || result.type === 'satellite')\n                    .map((result) => (\n                    <Card key={result.id} className={`border-l-4 ${\n                      result.type === 'satellite' ? 'border-l-purple-500' : 'border-l-green-500'\n                    }`}>\n                      <CardHeader>\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-base flex items-center\">\n                            {result.type === 'satellite' ?\n                              <Satellite className=\"w-4 h-4 mr-2\" /> :\n                              <MapPin className=\"w-4 h-4 mr-2\" />\n                            }\n                            {result.name}\n                          </CardTitle>\n                          <div className=\"flex items-center space-x-2\">\n                            <Badge className={`${getStatusColor(result.status)} border`}>\n                              {result.status}\n                            </Badge>\n                            <span className=\"text-sm text-gray-600\">{result.confidence}% confidence</span>\n                          </div>\n                        </div>\n                      </CardHeader>\n                      <CardContent>\n                        <Progress value={result.confidence} className=\"h-2 mb-4\" />\n\n                        {result.type === 'satellite' && (\n                          <div className=\"bg-purple-50 p-4 rounded-lg mb-4\">\n                            <h4 className=\"font-medium text-purple-800 mb-2\">Satellite Analysis Results:</h4>\n                            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                              <div>\n                                <span className=\"font-medium\">Land Cover Type:</span>\n                                <span className=\"ml-2 text-purple-600\">Mixed Forest (68%)</span>\n                              </div>\n                              <div>\n                                <span className=\"font-medium\">Change Detection:</span>\n                                <span className=\"ml-2 text-purple-600\">2.3% deforestation</span>\n                              </div>\n                              <div>\n                                <span className=\"font-medium\">Boundary Accuracy:</span>\n                                <span className=\"ml-2 text-purple-600\">89.2% match</span>\n                              </div>\n                              <div>\n                                <span className=\"font-medium\">Last Updated:</span>\n                                <span className=\"ml-2 text-purple-600\">15 days ago</span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n\n                        {result.issues.length > 0 && (\n                          <div className=\"mb-3\">\n                            <h4 className=\"font-medium text-red-700 mb-2\">Issues Detected:</h4>\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-red-600\">\n                              {result.issues.map((issue, index) => (\n                                <li key={index}>{issue}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                        {result.suggestions.length > 0 && (\n                          <div>\n                            <h4 className=\"font-medium text-blue-700 mb-2\">AI Suggestions:</h4>\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-blue-600\">\n                              {result.suggestions.map((suggestion, index) => (\n                                <li key={index}>{suggestion}</li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  ))}\n                </TabsContent>\n\n                <TabsContent value=\"recommendations\" className=\"space-y-6 mt-0\">\n                  <Card className={`border-2 ${getRecommendationColor(analysisData.recommendation)}`}>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center\">\n                        <Zap className=\"w-5 h-5 mr-2\" />\n                        AI Recommendation: {analysisData.recommendation.toUpperCase()}\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"font-medium\">Confidence Level:</span>\n                          <Badge variant=\"outline\">{analysisData.confidence}%</Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"font-medium\">Risk Assessment:</span>\n                          <Badge variant=\"outline\" className={`${getRiskColor(analysisData.riskLevel)} border-current`}>\n                            {analysisData.riskLevel.toUpperCase()}\n                          </Badge>\n                        </div>\n                        <Separator />\n\n                        {analysisData.recommendation === 'review' && (\n                          <Alert className=\"border-yellow-200 bg-yellow-50\">\n                            <MessageSquare className=\"h-4 w-4 text-yellow-600\" />\n                            <AlertDescription className=\"text-yellow-800\">\n                              <div className=\"font-medium mb-2\">Manual Review Required:</div>\n                              <ul className=\"list-disc list-inside space-y-1\">\n                                <li>Satellite imagery shows boundary discrepancies</li>\n                                <li>Missing community certificate verification</li>\n                                <li>Land use pattern requires field verification</li>\n                              </ul>\n                            </AlertDescription>\n                          </Alert>\n                        )}\n\n                        <div className=\"flex flex-col sm:flex-row gap-3\">\n                          <Button\n                            className=\"bg-gradient-to-r from-green-600 to-emerald-700 hover:from-green-700 hover:to-emerald-800 flex-1\"\n                            onClick={() => onRecommendationAccept?.(analysisData.recommendation)}\n                          >\n                            <CheckCircle className=\"w-4 h-4 mr-2\" />\n                            Accept AI Recommendation\n                          </Button>\n                          <Button variant=\"outline\" className=\"flex-1\">\n                            <Eye className=\"w-4 h-4 mr-2\" />\n                            Schedule Field Verification\n                          </Button>\n                          <Button variant=\"outline\">\n                            <Download className=\"w-4 h-4 mr-2\" />\n                            Export Report\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Processing Performance */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Analysis Performance Metrics</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-green-600\">\n                            {analysisData.analysisResults.reduce((acc, r) => acc + r.processingTime, 0).toFixed(1)}s\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Total Processing Time</p>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-blue-600\">\n                            {analysisData.analysisResults.length}\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Components Analyzed</p>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-purple-600\">\n                            {analysisData.analysisResults.filter(r => r.status === 'valid').length}\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Valid Components</p>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-yellow-600\">\n                            {analysisData.analysisResults.filter(r => r.status === 'suspicious').length}\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Flagged for Review</p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n              </div>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}