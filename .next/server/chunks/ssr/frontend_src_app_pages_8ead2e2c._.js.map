{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/LanguageContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\n\nexport type Language = 'en' | 'hi';\n\ninterface LanguageContextType {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\n// Translation objects\nconst translations = {\n  en: {\n    // Navigation\n    'nav.portal': 'FRA Portal',\n    'nav.subtitle': 'Forest Rights Management',\n    'nav.about': 'About',\n    'nav.features': 'Features',\n    'nav.contact': 'Contact',\n    'nav.signin': 'Sign In',\n    'nav.accessPortal': 'Access Portal',\n    'nav.learnMore': 'Learn More',\n    'nav.backToHome': 'Back to Home',\n\n    // Landing Page\n    'landing.badge': '🇮🇳 Government of India Initiative',\n    'landing.title': 'Digital Forest Rights',\n    'landing.titleHighlight': 'Management',\n    'landing.subtitle': 'Empowering forest communities through transparent, efficient, and secure digital management of Forest Rights Act claims and allotments.',\n    'landing.stats.claims': 'Claims Processed',\n    'landing.stats.beneficiaries': 'Beneficiaries',\n    'landing.stats.districts': 'Districts Covered',\n    'landing.stats.satisfaction': 'User Satisfaction',\n\n    // Features\n    'features.badge': '⚡ Platform Features',\n    'features.title': 'Comprehensive Forest Rights',\n    'features.titleHighlight': 'Management Platform',\n    'features.subtitle': 'Our integrated platform streamlines every aspect of FRA implementation, from claims processing to allotment monitoring and compliance tracking.',\n\n    'features.claims.title': 'Claims Management',\n    'features.claims.desc': 'Streamlined processing of Forest Rights Act claims with digital workflows and transparent tracking.',\n    'features.allotments.title': 'Allotment Tracking',\n    'features.allotments.desc': 'Comprehensive monitoring of forest land allotments with compliance tracking and reporting.',\n    'features.gis.title': 'GIS Mapping',\n    'features.gis.desc': 'Interactive mapping with satellite imagery, boundary demarcation, and spatial analysis tools.',\n    'features.security.title': 'Document Security',\n    'features.security.desc': 'Secure document management with verification workflows and digital authentication.',\n    'features.analytics.title': 'Analytics Dashboard',\n    'features.analytics.desc': 'Real-time insights and reporting for better decision-making and policy implementation.',\n    'features.access.title': 'Multi-stakeholder Access',\n    'features.access.desc': 'Role-based access for government officials, forest communities, and other stakeholders.',\n\n    // About Section\n    'about.title': 'Empowering Forest Communities Through Digital Innovation',\n    'about.para1': 'The Forest Rights Act, 2006 recognizes the rights of forest dwelling tribal communities and other traditional forest dwellers to forest resources, on which these communities were dependent for a variety of needs.',\n    'about.para2': 'Our digital platform ensures transparent, efficient, and accessible implementation of FRA provisions while maintaining the highest standards of data security and user privacy.',\n    'about.point1': 'Transparent claim processing with real-time tracking',\n    'about.point2': 'Secure document management and verification',\n    'about.point3': 'GIS-based mapping for accurate boundary demarcation',\n    'about.point4': 'Comprehensive reporting and analytics tools',\n\n    // Cards\n    'cards.national': 'National Coverage',\n    'cards.nationalDesc': 'Deployed across multiple states',\n    'cards.award': 'Award Winning',\n    'cards.awardDesc': 'Digital governance excellence',\n    'cards.secure': 'Secure & Compliant',\n    'cards.secureDesc': 'Government security standards',\n    'cards.community': 'Community Focused',\n    'cards.communityDesc': 'Accessible and user-friendly',\n\n    // Testimonials\n    'testimonials.title': 'Trusted by Stakeholders',\n    'testimonials.subtitle': 'Hear from government officials, community leaders, and researchers',\n\n    // CTA Section\n    'cta.title': 'Ready to Transform Forest Rights Management?',\n    'cta.subtitle': 'Join thousands of officials and communities already using our platform to ensure transparent and efficient implementation of Forest Rights Act.',\n    'cta.accessNow': 'Access Portal Now',\n    'cta.requestDemo': 'Request Demo',\n    'cta.note': 'Secure login with government credentials • No installation required',\n\n    // Footer\n    'footer.platform': 'Platform',\n    'footer.support': 'Support',\n    'footer.contact': 'Contact',\n    'footer.copyright': '© 2024 Government of India. All rights reserved.',\n    'footer.privacy': 'Privacy Policy',\n    'footer.terms': 'Terms of Service',\n    'footer.accessibility': 'Accessibility',\n\n    // Dashboard\n    'dashboard.welcome': 'Welcome to FRA Portal',\n    'dashboard.subtitle': 'Manage forest rights claims, allotments, and documentation with transparency and efficiency using our advanced AI-powered platform',\n    'dashboard.totalClaims': 'Total Claims',\n    'dashboard.activeAllotments': 'Active Allotments',\n    'dashboard.mappedAreas': 'Mapped Areas',\n    'dashboard.beneficiaries': 'Beneficiaries',\n    'dashboard.hectaresMapped': 'hectares mapped',\n    'dashboard.familiesServed': 'families served',\n\n    // Sidebar\n    'sidebar.dashboard': 'Dashboard',\n    'sidebar.submitClaim': 'Submit Claim',\n    'sidebar.claims': 'Claims Management',\n    'sidebar.allotments': 'Allotments',\n    'sidebar.maps': 'GIS Mapping',\n    'sidebar.documents': 'Document Center',\n    'sidebar.ocrProcessing': 'OCR Processing',\n\n    // OCR Processing\n    'ocr.title': 'OCR + NER Document Processing',\n    'ocr.subtitle': 'Upload documents and analyze them using automated text extraction and named entity recognition',\n    'ocr.upload': 'Upload Documents',\n    'ocr.uploadDesc': 'Drag and drop PDF, PNG, JPG files here or click to select',\n    'ocr.chooseFiles': 'Choose Files',\n    'ocr.uploadedFiles': 'Uploaded Files',\n    'ocr.noFiles': 'No files uploaded yet',\n    'ocr.processing': 'Processing',\n    'ocr.results': 'Results',\n    'ocr.selectFile': 'Select a file to view results',\n    'ocr.processingProgress': 'Processing in progress...',\n    'ocr.processingError': 'Processing error occurred',\n    'ocr.extractedText': 'Extracted Text',\n    'ocr.namedEntities': 'Named Entities',\n    'ocr.ocrOutput': 'OCR Output',\n    'ocr.download': 'Download',\n    'ocr.identifiedEntities': 'Identified Entities',\n    'ocr.entities': 'entities',\n\n    // Search\n    'search.placeholder': 'Search claims, documents, or locations...',\n\n    // Status\n    'status.online': 'System Status: Online',\n    'status.approved': 'Approved',\n    'status.pending': 'Pending',\n    'status.underReview': 'Under Review',\n    'status.rejected': 'Rejected',\n\n    // Common\n    'common.learnMore': 'Learn more',\n    'common.lastMonth': 'from last month',\n    'common.secureVerified': 'Secure & Verified',\n    'common.govCertified': 'Government Certified',\n\n    // Authentication\n    'auth.portal': 'FRA Portal',\n    'auth.loginSubtitle': 'Secure access for government officials',\n    'auth.signupSubtitle': 'Register for authorized access',\n    'auth.signIn': 'Sign In',\n    'auth.signUp': 'Sign Up',\n    'auth.createAccount': 'Create Account',\n    'auth.signInDescription': 'Enter your government credentials to access the portal',\n    'auth.signUpDescription': 'Register with your official details for portal access',\n    'auth.email': 'Email Address',\n    'auth.password': 'Password',\n    'auth.confirmPassword': 'Confirm Password',\n    'auth.fullName': 'Full Name',\n    'auth.employeeId': 'Employee ID',\n    'auth.role': 'Role',\n    'auth.department': 'Department',\n    'auth.emailPlaceholder': 'your.email@fra.gov.in',\n    'auth.passwordPlaceholder': 'Enter your password',\n    'auth.confirmPasswordPlaceholder': 'Confirm your password',\n    'auth.fullNamePlaceholder': 'Enter your full name',\n    'auth.employeeIdPlaceholder': 'Enter your employee ID',\n    'auth.departmentPlaceholder': 'Enter your department',\n    'auth.selectRole': 'Select your role',\n    'auth.roles.admin': 'Administrator',\n    'auth.roles.officer': 'Field Officer',\n    'auth.roles.supervisor': 'Supervisor',\n    'auth.signingIn': 'Signing In...',\n    'auth.creatingAccount': 'Creating Account...',\n    'auth.noAccount': \"Don't have an account?\",\n    'auth.haveAccount': 'Already have an account?',\n    'auth.demoCredentials': 'Demo Credentials',\n    'auth.admin': 'Admin',\n    'auth.officer': 'Officer',\n    'auth.fillAllFields': 'Please fill in all required fields',\n    'auth.invalidCredentials': 'Invalid email or password',\n    'auth.passwordMismatch': 'Passwords do not match',\n    'auth.passwordTooShort': 'Password must be at least 6 characters',\n    'auth.registrationSuccess': 'Registration successful! Redirecting...',\n    'auth.userExists': 'User with this email already exists',\n    'auth.logout': 'Logout',\n    'auth.logoutConfirm': 'Are you sure you want to logout?',\n\n    // Post-login sections translations\n    'system.forestManagement': 'Forest Management',\n    'system.aiPowered': 'AI-Powered',\n    'system.securePlatform': 'Secure Platform',\n    'system.aiAnalysis': 'AI-Powered Claim Analysis',\n    'system.aiAnalysisDesc': 'Real-time insights and automated processing with machine learning',\n    'system.activelearning': 'Active & Learning',\n    'system.liveAnalysis': 'Live Analysis',\n    'system.claimsAnalyzed': 'Claims Analyzed',\n    'system.accuracyRate': 'accuracy rate',\n    'system.autoApproved': 'Auto-Approved',\n    'system.totalClaims': 'of total claims',\n    'system.flaggedReview': 'Flagged for Review',\n    'system.requireAttention': 'require attention',\n    'system.avgProcessTime': 'Avg Process Time',\n    'system.fasterManual': 'faster than manual',\n    'system.aiSystemOptimal': 'AI system running optimally',\n    'system.lastUpdated': 'Last updated: 2 minutes ago',\n    'system.monitoring247': 'Monitoring 24/7',\n    'charts.monthlyActivity': 'Monthly Activity',\n    'charts.activityDesc': 'Claims and allotments processing trends',\n    'charts.analytics': 'Analytics',\n    'charts.statusDistribution': 'Claim Status Distribution',\n    'charts.statusDesc': 'Current status breakdown of all claims',\n    'charts.status': 'Status',\n    'activity.recentActivity': 'Recent Activity',\n    'activity.recentDesc': 'Latest system updates and actions',\n    'activity.liveFeed': 'Live Feed',\n    'activity.newClaim': 'New claim submitted',\n    'activity.allotmentApproved': 'Allotment approved',\n    'activity.documentVerification': 'Document verification',\n    'activity.surveyCompleted': 'Survey completed',\n    'activity.adilabadDistrict': 'Adilabad District',\n    'activity.warangalForest': 'Warangal Forest',\n    'activity.khammamRegion': 'Khammam Region',\n    'activity.nalgondaHills': 'Nalgonda Hills',\n    'activity.hoursAgo': 'hours ago',\n    'activity.dayAgo': 'day ago',\n    'activity.daysAgo': 'days ago',\n    'processing.title': 'Processing Status',\n    'processing.desc': 'Current workflow progress overview',\n    'processing.progress': 'Progress',\n    'processing.claimsProcessing': 'Claims Processing',\n    'processing.claimsProcessed': 'claims processed',\n    'processing.documentVerification': 'Document Verification',\n    'processing.documentsVerified': 'documents verified',\n    'processing.surveyCompletion': 'Survey Completion',\n    'processing.hectaresSurveyed': 'hectares surveyed',\n    'processing.completedToday': 'Completed Today',\n    'processing.inProgress': 'In Progress',\n    'processing.requiresAttention': 'Requires Attention',\n    'common.cancel': 'Cancel',\n\n    // Claim Submission\n    'claim.personalDetails': 'Personal Details',\n    'claim.landDetails': 'Land Details',\n    'claim.communityInfo': 'Community Info',\n    'claim.documents': 'Documents',\n    'claim.review': 'Review',\n    'claim.submit': 'Submit',\n    'claim.previous': 'Previous',\n    'claim.next': 'Next',\n    'claim.firstName': 'First Name',\n    'claim.lastName': 'Last Name',\n    'claim.fatherName': \"Father's Name\",\n    'claim.dateOfBirth': 'Date of Birth',\n    'claim.gender': 'Gender',\n    'claim.phoneNumber': 'Phone Number',\n    'claim.email': 'Email',\n    'claim.aadharNumber': 'Aadhar Number',\n    'claim.address': 'Address',\n    'claim.village': 'Village',\n    'claim.tehsil': 'Tehsil',\n    'claim.district': 'District',\n    'claim.state': 'State',\n    'claim.pincode': 'Pincode',\n\n    // Claims Management\n    'claims.management': 'Claims Management',\n    'claims.searchClaims': 'Search claims...',\n    'claims.filterBy': 'Filter by',\n    'claims.allClaims': 'All Claims',\n    'claims.viewClaim': 'View Claim',\n    'claims.editClaim': 'Edit Claim',\n    'claims.claimId': 'Claim ID',\n    'claims.applicantName': 'Applicant Name',\n    'claims.submissionDate': 'Submission Date',\n    'claims.priority': 'Priority',\n    'claims.high': 'High',\n    'claims.medium': 'Medium',\n    'claims.low': 'Low',\n\n    // Allotments\n    'allotments.title': 'Forest Land Allotments',\n    'allotments.overview': 'Comprehensive tracking of approved forest land allotments',\n    'allotments.totalArea': 'Total Area Allotted',\n    'allotments.activeCases': 'Active Cases',\n    'allotments.compliance': 'Compliance Rate',\n\n    // GIS Mapping\n    'gis.title': 'GIS Mapping & Spatial Analysis',\n    'gis.overview': 'Interactive mapping with satellite imagery and boundary analysis',\n    'gis.satelliteView': 'Satellite View',\n    'gis.boundaryMapping': 'Boundary Mapping',\n    'gis.layerControls': 'Layer Controls',\n\n    // Document Center\n    'docs.title': 'Document Management Center',\n    'docs.overview': 'Secure document storage, verification, and compliance tracking',\n    'docs.uploadDocument': 'Upload Document',\n    'docs.verifyDocument': 'Verify Document',\n    'docs.totalDocuments': 'Total Documents',\n    'docs.verified': 'Verified',\n    'docs.pending': 'Pending Verification',\n  },\n\n  hi: {\n    // Navigation\n    'nav.portal': 'वन अधिकार पोर्टल',\n    'nav.subtitle': 'वन अधिकार प्रबंधन',\n    'nav.about': 'हमारे बारे में',\n    'nav.features': 'सुविधाएं',\n    'nav.contact': 'संपर्क',\n    'nav.signin': 'साइन इन',\n    'nav.accessPortal': 'पोर्टल तक पहुंच',\n    'nav.learnMore': 'और जानें',\n    'nav.backToHome': 'होम पर वापस जाएं',\n\n    // Landing Page\n    'landing.badge': '🇮🇳 भारत सरकार की पहल',\n    'landing.title': 'डिजिटल वन अधिकार',\n    'landing.titleHighlight': 'प्रबंधन',\n    'landing.subtitle': 'वन अधिकार अधिनियम दावों और आवंटन के पारदर्शी, कुशल और सुरक्षित डिजिटल प्रबंधन के माध्यम से वन समुदायों को सशक्त बनाना।',\n    'landing.stats.claims': 'दावे संसाधित',\n    'landing.stats.beneficiaries': 'लाभार्थी',\n    'landing.stats.districts': 'जिले कवर किए गए',\n    'landing.stats.satisfaction': 'उपयोगकर्ता संतुष्टि',\n\n    // Features\n    'features.badge': '⚡ प्लेटफॉर्म सुविधाएं',\n    'features.title': 'व्यापक वन अधिकार',\n    'features.titleHighlight': 'प्रबंधन प्लेटफॉर्म',\n    'features.subtitle': 'हमारा एकीकृत प्लेटफॉर्म वन अधिकार अधिनियम कार्यान्वयन के हर पहलू को सुव्यवस्थित करता है, दाव�� प्रसंस्करण से लेकर आवंटन निगरानी और अनुपालन ट्रैकिंग तक।',\n\n    'features.claims.title': 'दावा प्रबंधन',\n    'features.claims.desc': 'डिजिटल वर्कफ़्लो और पारदर्शी ट्रैकिंग के साथ वन अधिकार अधिनियम दावों की सुव्यवस्थित प्रसंस्करण।',\n    'features.allotments.title': 'आवंटन ट्रैकिंग',\n    'features.allotments.desc': 'अनुपालन ट्रैकिंग और रिपोर्टिंग के साथ वन भूमि आवंटन की व्यापक निगरानी।',\n    'features.gis.title': 'जीआईएस मैपिंग',\n    'features.gis.desc': 'उपग्रह इमेजरी, सीमा निर्धारण और स्थानिक विश्लेषण उपकरणों के साथ ���ंटरै��्टिव मैपिंग।',\n    'features.security.title': 'दस्तावेज़ सुरक्षा',\n    'features.security.desc': 'सत्यापन वर्कफ़्लो और डिजिटल प्रमाणीकरण के साथ सुरक्षित दस्तावेज़ प्रबंधन।',\n    'features.analytics.title': 'एनालिटिक्स डैशबोर्ड',\n    'features.analytics.desc': 'बेहतर निर्णय लेने और नीति कार्यान्वयन के लिए रीयल-टाइम अंतर्दृष्टि और रिपोर्टिंग।',\n    'features.access.title': 'बहु-हितधारक पहुंच',\n    'features.access.desc': 'सरकारी अधिकारियों, वन समुदायों और अन्य हितधारकों के लिए भूमिका-आधारित पहुंच।',\n\n    // About Section\n    'about.title': 'डिजिटल नवाचार के माध्यम से वन समुदायों का सशक्तिकरण',\n    'about.para1': 'वन अधिकार अधिनियम, 2006 वन निवासी आदिवासी समुदायों और अन्य पारंपरिक वन निवासियों के वन संसाधनों पर अधिकारों को मान्यता देता है, जिन पर ये समुदाय विभिन्न आवश्यकताओं के लिए निर्भर थे।',\n    'about.para2': 'हमारा डिजिटल प्लेटफॉर्म डेटा सुरक्षा और उपयोगकर्ता गोपनीयता के उच्चतम मानकों को बनाए रखते हुए वन अधिकार अधिनियम प्रावधानों का पारदर्शी, कुशल और सुलभ कार्यान्वयन सुनिश्चित करता है।',\n    'about.point1': 'रीयल-टाइम ट्रैकिंग के साथ पारदर्शी दावा प्रसंस्करण',\n    'about.point2': 'सुरक्षित दस्तावेज़ प्रबंधन और सत्यापन',\n    'about.point3': 'सटीक सीमा निर्धारण के लिए जीआईएस-आधारित मैपिंग',\n    'about.point4': 'व्यापक रिपोर्टिंग और एनालिटिक्स उपकरण',\n\n    // Cards\n    'cards.national': 'राष्ट्रीय कवरेज',\n    'cards.nationalDesc': 'कई राज्यों में तैनात',\n    'cards.award': 'पुरस्कार विजेता',\n    'cards.awardDesc': 'डिजिटल गवर्नेंस उत्कृष्टता',\n    'cards.secure': 'सुरक्षित और अनुपालित',\n    'cards.secureDesc': 'सरकारी सुरक्षा मानक',\n    'cards.community': 'समुदाय केंद्रित',\n    'cards.communityDesc': 'सुलभ और उपयोगकर्ता-मित्र',\n\n    // Testimonials\n    'testimonials.title': 'हितधारकों द्वारा भरोसेमंद',\n    'testimonials.subtitle': 'सरकारी अधिकारियों, समुदायिक नेताओं और शोधकर्ताओं से सुनें',\n\n    // CTA Section\n    'cta.title': 'वन अधिकार प्रबंधन को बदलने के लिए तैयार हैं?',\n    'cta.subtitle': 'हजारों अधिकारियों और समुदायों के साथ जुड़ें जो पहले से ही हमारे प्लेटफॉर्म का उपयोग करके वन अधिकार अधिनियम के पारदर्शी और कुशल कार्यान्वयन को सुनिश्चित कर रहे हैं।',\n    'cta.accessNow': 'अभी पोर्टल तक पहुंचें',\n    'cta.requestDemo': 'डेमो का अनुरोध करें',\n    'cta.note': 'सरकारी क्रेडेंशियल के साथ सुरक्षित लॉगिन • कोई इंस्टॉलेशन आवश्यक नहीं',\n\n    // Footer\n    'footer.platform': 'प्लेटफॉर्म',\n    'footer.support': 'सहायता',\n    'footer.contact': 'संपर्क',\n    'footer.copyright': '© 2024 भारत सरकार। सभी अधिकार सुरक्षित।',\n    'footer.privacy': 'गोपनीयता नीति',\n    'footer.terms': 'सेवा की शर्तें',\n    'footer.accessibility': 'पहुंच',\n\n    // Dashboard\n    'dashboard.welcome': 'वन अधिकार पोर्टल में आपका स्वागत है',\n    'dashboard.subtitle': 'हमारे उन्नत एआई-संचालित प्लेटफॉर्म का उपयोग करके पारदर्शिता और दक्षता के साथ वन अधिकार दावों, आवंटन और दस्तावेज़ीकरण का प्रबंधन करें',\n    'dashboard.totalClaims': 'कुल दावे',\n    'dashboard.activeAllotments': 'सक्रिय आवंटन',\n    'dashboard.mappedAreas': 'मैप किए गए क्षेत्र',\n    'dashboard.beneficiaries': 'लाभार्थी',\n    'dashboard.hectaresMapped': 'हेक्टेयर मैप किए गए',\n    'dashboard.familiesServed': 'परिवारों की सेवा की',\n\n    // Sidebar\n    'sidebar.dashboard': 'डैशबोर्ड',\n    'sidebar.submitClaim': 'दावा जमा करें',\n    'sidebar.claims': 'दावा प्रबंधन',\n    'sidebar.allotments': 'आवंटन',\n    'sidebar.maps': 'जीआईएस मैपिंग',\n    'sidebar.documents': 'दस्तावेज़ केंद्र',\n    'sidebar.ocrProcessing': 'ओसीआर प्रसंस्करण',\n\n    // OCR Processing\n    'ocr.title': 'ओसीआर + एनईआर दस्तावेज़ प्रसंस्करण',\n    'ocr.subtitle': 'दस्तावेजों को अपलोड करें और स्वचालित टेक्स्ट निष्कर्षण और नामित इकाई पहचान का उपयोग करके उनका विश्लेषण करें',\n    'ocr.upload': 'दस्तावेज़ अपलोड करें',\n    'ocr.uploadDesc': 'PDF, PNG, JPG फाइलों को यहाँ खींचकर छोड़ें या क्लिक करके चुनें',\n    'ocr.chooseFiles': 'फाइल चुनें',\n    'ocr.uploadedFiles': 'अपलोड की गई फाइलें',\n    'ocr.noFiles': 'कोई फाइल अपलोड नहीं की गई',\n    'ocr.processing': 'प्रसंस्करण',\n    'ocr.results': 'परिणाम',\n    'ocr.selectFile': 'परिणाम देखने के लिए एक फाइल चुनें',\n    'ocr.processingProgress': 'प्रसंस्करण जारी है...',\n    'ocr.processingError': 'प्रसंस्करण में त्रुटि हुई',\n    'ocr.extractedText': 'निकाला गया टेक्स्ट',\n    'ocr.namedEntities': 'नामित इकाइयाँ',\n    'ocr.ocrOutput': 'ओसीआर आउटपुट',\n    'ocr.download': 'डाउनलोड',\n    'ocr.identifiedEntities': 'पहचानी गई इकाइयाँ',\n    'ocr.entities': 'इकाइयाँ',\n\n    // Search\n    'search.placeholder': 'दावे, दस्तावेज़ या स्थान खोजें...',\n\n    // Status\n    'status.online': 'सिस्टम स्थिति: ऑनलाइन',\n    'status.approved': 'अनुमोदित',\n    'status.pending': 'लंबित',\n    'status.underReview': 'समीक्षाधीन',\n    'status.rejected': 'अस्वीकृत',\n\n    // Common\n    'common.learnMore': 'और जानें',\n    'common.lastMonth': 'पिछले महीने से',\n    'common.secureVerified': 'सुरक्षित और सत्यापित',\n    'common.govCertified': 'सरकार द्वारा प्रमाणित',\n\n    // Authentication\n    'auth.portal': 'वन अधिकार पोर्टल',\n    'auth.loginSubtitle': 'सरकारी अधिकारियों के लिए सुरक्षित पहुंच',\n    'auth.signupSubtitle': 'अधिकृत पहुंच के लिए पंजीकरण करें',\n    'auth.signIn': 'साइन इन',\n    'auth.signUp': 'साइन अप',\n    'auth.createAccount': 'खाता बनाएं',\n    'auth.signInDescription': 'पोर्टल तक पहुंचने के लिए अपनी सरकारी क्रेडेंशियल दर्ज करें',\n    'auth.signUpDescription': 'पोर्टल एक्सेस के लिए अपने आधिकारिक विवरण के साथ पंजीकरण करें',\n    'auth.email': 'ईमेल पता',\n    'auth.password': 'पासवर्ड',\n    'auth.confirmPassword': 'पासवर्ड की पुष्टि करें',\n    'auth.fullName': 'पूरा नाम',\n    'auth.employeeId': 'कर्मचारी आईडी',\n    'auth.role': 'भूमिका',\n    'auth.department': 'विभाग',\n    'auth.emailPlaceholder': 'your.email@fra.gov.in',\n    'auth.passwordPlaceholder': 'अपना पासवर्ड दर्ज करें',\n    'auth.confirmPasswordPlaceholder': 'अपने पासवर्ड की पुष्टि करें',\n    'auth.fullNamePlaceholder': 'अपना पूरा नाम दर्ज करें',\n    'auth.employeeIdPlaceholder': 'अपनी कर्मचारी आईडी दर्ज करें',\n    'auth.departmentPlaceholder': 'अपना विभाग दर्ज करें',\n    'auth.selectRole': 'अपनी भूमिका चुनें',\n    'auth.roles.admin': 'प्रशासक',\n    'auth.roles.officer': 'फील्ड अधिकारी',\n    'auth.roles.supervisor': 'पर्यवेक्षक',\n    'auth.signingIn': 'साइन इन हो रहा है...',\n    'auth.creatingAccount': 'खाता बनाया जा रहा है...',\n    'auth.noAccount': 'कोई खाता नहीं है?',\n    'auth.haveAccount': 'पहले से ही एक खाता है?',\n    'auth.demoCredentials': 'डेमो क्रेडेंशियल',\n    'auth.admin': 'प्रशासक',\n    'auth.officer': 'अधिकारी',\n    'auth.fillAllFields': 'कृपया सभी आवश्यक फ़ील्ड भरें',\n    'auth.invalidCredentials': 'अमान्य ईमेल या पासवर्ड',\n    'auth.passwordMismatch': 'पासवर्ड मेल नहीं खाते',\n    'auth.passwordTooShort': 'पासवर्ड कम से कम 6 वर्ण का होना चाहिए',\n    'auth.registrationSuccess': 'पंजीकरण सफल! रीडायरेक्ट कर रहा है...',\n    'auth.userExists': 'इस ईमेल के साथ उपयोगकर्ता पहले से मौजूद है',\n    'auth.logout': 'लॉगआउट',\n    'auth.logoutConfirm': 'क्या आप वाकई लॉगआउट करना चाहते हैं?',\n\n    // Post-login sections translations\n    'system.forestManagement': 'वन प्रबंधन',\n    'system.aiPowered': 'एआई संचालित',\n    'system.securePlatform': 'सुरक्षित प्लेटफॉर्म',\n    'system.aiAnalysis': 'एआई-संचालित दावा विश्लेषण',\n    'system.aiAnalysisDesc': 'मशीन लर्निंग के साथ रीयल-टाइम अंतर्दृष्टि और स्वचालित प्रसंस्करण',\n    'system.activelearning': 'सक्रिय और सीखना',\n    'system.liveAnalysis': 'लाइव विश्लेषण',\n    'system.claimsAnalyzed': 'दावे विश्लेषित',\n    'system.accuracyRate': 'सटीकता दर',\n    'system.autoApproved': 'स्वतः अनुमोदित',\n    'system.totalClaims': 'कुल दावों में से',\n    'system.flaggedReview': 'समीक्षा के लिए चिह्नित',\n    'system.requireAttention': 'ध्यान चाहिए',\n    'system.avgProcessTime': 'औसत प्रक्रिया समय',\n    'system.fasterManual': 'मैनुअल से तेज',\n    'system.aiSystemOptimal': 'एआई सिस्टम इष्टतम रूप से चल रहा है',\n    'system.lastUpdated': 'अंतिम अपडेट: 2 मिनट पहले',\n    'system.monitoring247': '24/7 निगरानी',\n    'charts.monthlyActivity': 'मासिक गतिविधि',\n    'charts.activityDesc': 'दावे और आवंटन प्रसंस्करण रुझान',\n    'charts.analytics': 'एनालिटिक्स',\n    'charts.statusDistribution': 'दावा स्थिति वितरण',\n    'charts.statusDesc': 'सभी दावों का वर्तमान स्थिति विभाजन',\n    'charts.status': 'स्थिति',\n    'activity.recentActivity': 'हाल की गतिविधि',\n    'activity.recentDesc': 'नवीनतम सिस्टम अपडेट और कार्य',\n    'activity.liveFeed': 'लाइव फीड',\n    'activity.newClaim': 'नया दावा प्रस्तुत',\n    'activity.allotmentApproved': 'आवंटन अनुमोदित',\n    'activity.documentVerification': 'दस्तावेज़ सत्यापन',\n    'activity.surveyCompleted': 'सर्वेक्षण पूर्ण',\n    'activity.adilabadDistrict': 'आदिलाबा�� जिला',\n    'activity.warangalForest': 'वारंगल वन',\n    'activity.khammamRegion': 'खम्मम क्षेत्र',\n    'activity.nalgondaHills': 'नालगोंडा पहाड़ियां',\n    'activity.hoursAgo': 'घंटे पहले',\n    'activity.dayAgo': 'दिन पहले',\n    'activity.daysAgo': 'दिन पहले',\n    'processing.title': 'प्रसंस्करण स्थिति',\n    'processing.desc': 'वर्तमान वर्कफ़्लो प्रगति अवलोकन',\n    'processing.progress': 'प्रगति',\n    'processing.claimsProcessing': 'दावे प्रसंस्करण',\n    'processing.claimsProcessed': 'दावे संसाधित',\n    'processing.documentVerification': 'दस्तावेज़ सत्यापन',\n    'processing.documentsVerified': 'दस्तावेज़ सत्यापित',\n    'processing.surveyCompletion': 'सर्वेक्षण पूर्णता',\n    'processing.hectaresSurveyed': 'हेक्टेयर सर्वेक्षण',\n    'processing.completedToday': 'आज पूर्ण',\n    'processing.inProgress': 'प्रगति में',\n    'processing.requiresAttention': 'ध्यान चाहिए',\n    'common.cancel': 'रद्द करें',\n\n    // Claim Submission\n    'claim.personalDetails': 'व्यक्तिगत विवरण',\n    'claim.landDetails': 'भूमि विवरण',\n    'claim.communityInfo': 'समुदायिक जानकारी',\n    'claim.documents': 'दस्तावेज़',\n    'claim.review': 'समीक्षा',\n    'claim.submit': 'जमा करें',\n    'claim.previous': 'पिछला',\n    'claim.next': 'अगला',\n    'claim.firstName': 'पहला नाम',\n    'claim.lastName': 'अंतिम नाम',\n    'claim.fatherName': 'पिता का नाम',\n    'claim.dateOfBirth': 'जन्म तिथि',\n    'claim.gender': 'लिंग',\n    'claim.phoneNumber': 'फोन नंबर',\n    'claim.email': 'ईमेल',\n    'claim.aadharNumber': 'आधार संख्या',\n    'claim.address': 'पता',\n    'claim.village': 'गांव',\n    'claim.tehsil': 'तहसील',\n    'claim.district': 'जिला',\n    'claim.state': 'राज्य',\n    'claim.pincode': 'पिनकोड',\n\n    // Claims Management\n    'claims.management': 'दावा प्रबंधन',\n    'claims.searchClaims': 'दावे खोजें...',\n    'claims.filterBy': 'फ़िल्टर करें',\n    'claims.allClaims': 'सभी दावे',\n    'claims.viewClaim': 'दावा देखें',\n    'claims.editClaim': 'दावा संपादित करें',\n    'claims.claimId': 'दावा आईडी',\n    'claims.applicantName': 'आवेदक का नाम',\n    'claims.submissionDate': 'प्रस्तुति तिथि',\n    'claims.priority': 'प्राथमिकता',\n    'claims.high': 'उच्च',\n    'claims.medium': 'मध्यम',\n    'claims.low': 'निम्न',\n\n    // Allotments\n    'allotments.title': 'वन भूमि आवंटन',\n    'allotments.overview': 'अनुमोदित वन भूमि आवंटन का व्यापक ट्रैकिंग',\n    'allotments.totalArea': 'कुल आवंटित क्षेत्र',\n    'allotments.activeCases': 'सक्रिय मामले',\n    'allotments.compliance': 'अनुपालन दर',\n\n    // GIS Mapping\n    'gis.title': 'जीआईएस मैपिंग और स्थानिक विश्लेषण',\n    'gis.overview': 'उपग्रह इमेजरी और सीमा विश्लेषण के साथ इंटरैक्टिव मैपिंग',\n    'gis.satelliteView': 'उपग्रह दृश्य',\n    'gis.boundaryMapping': 'सीमा मैपिंग',\n    'gis.layerControls': 'लेयर नियंत्रण',\n\n    // Document Center\n    'docs.title': 'दस्तावेज़ प्रबंधन केंद्र',\n    'docs.overview': 'सुरक्षित दस्तावेज़ भंडारण, सत्यापन और अनुपालन ट्रैकिंग',\n    'docs.uploadDocument': 'दस्तावेज़ अपलोड करें',\n    'docs.verifyDocument': 'दस्तावेज़ सत्यापित करें',\n    'docs.totalDocuments': 'कुल दस्तावेज़',\n    'docs.verified': 'सत्यापित',\n    'docs.pending': 'सत्यापन लंबित',\n  }\n};\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n  type TranslationKeys = keyof typeof translations[\"en\"];\n\n  const t = (key: string): string => {\n    return (translations[language] as Record<string, string>)[key] ?? key;\n  };\n\n  interface LanguageContextType {\n    language: \"en\" | \"hi\";\n    setLanguage: (lang: \"en\" | \"hi\") => void;\n    t: (key: string) => string; // consumer-friendly\n  }\n\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t: t as (key: string) => string }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/LanguageSwitcher.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react';\nimport { Globe } from 'lucide-react';\nimport { Button } from '../../../components/ui/button';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '../../../components/ui/dropdown-menu';\nimport { useLanguage } from './LanguageContext';\n\nexport function LanguageSwitcher() {\n  const { language, setLanguage } = useLanguage();\n\n  const languages = [\n    { code: 'en', name: 'English', native: 'English' },\n    { code: 'hi', name: 'Hindi', native: 'हिन्दी' }\n  ];\n\n  const currentLanguage = languages.find(lang => lang.code === language);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <button className=\"inline-flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-700 bg-transparent hover:bg-green-50 hover:text-green-700 transition-colors duration-200 rounded-lg border-0 cursor-pointer\">\n          <Globe className=\"w-4 h-4\" />\n          <span>{currentLanguage?.native}</span>\n        </button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-40\">\n        {languages.map((lang) => (\n          <DropdownMenuItem\n            key={lang.code}\n            onClick={() => setLanguage(lang.code as 'en' | 'hi')}\n            className={`flex items-center justify-between cursor-pointer ${\n              language === lang.code ? 'bg-green-50 text-green-700' : ''\n            }`}\n          >\n            <span>{lang.native}</span>\n            {language === lang.code && (\n              <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n            )}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AAEA;AACA;AANA;;;;;AAQO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,IAAA,kKAAW;IAE7C,MAAM,YAAY;QAChB;YAAE,MAAM;YAAM,MAAM;YAAW,QAAQ;QAAU;QACjD;YAAE,MAAM;YAAM,MAAM;YAAS,QAAQ;QAAS;KAC/C;IAED,MAAM,kBAAkB,UAAU,IAAI,CAAC,CAAA,OAAQ,KAAK,IAAI,KAAK;IAE7D,qBACE,0PAAC,iKAAY;;0BACX,0PAAC,wKAAmB;gBAAC,OAAO;0BAC1B,cAAA,0PAAC;oBAAO,WAAU;;sCAChB,0PAAC,yNAAK;4BAAC,WAAU;;;;;;sCACjB,0PAAC;sCAAM,iBAAiB;;;;;;;;;;;;;;;;;0BAG5B,0PAAC,wKAAmB;gBAAC,OAAM;gBAAM,WAAU;0BACxC,UAAU,GAAG,CAAC,CAAC,qBACd,0PAAC,qKAAgB;wBAEf,SAAS,IAAM,YAAY,KAAK,IAAI;wBACpC,WAAW,CAAC,iDAAiD,EAC3D,aAAa,KAAK,IAAI,GAAG,+BAA+B,IACxD;;0CAEF,0PAAC;0CAAM,KAAK,MAAM;;;;;;4BACjB,aAAa,KAAK,IAAI,kBACrB,0PAAC;gCAAI,WAAU;;;;;;;uBARZ,KAAK,IAAI;;;;;;;;;;;;;;;;AAe1B","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/AuthContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'officer' | 'supervisor';\n  department: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  signup: (userData: SignupData) => Promise<boolean>;\n  logout: () => void;\n  loading: boolean;\n}\n\ninterface SignupData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  role: 'admin' | 'officer' | 'supervisor';\n  department: string;\n  employeeId: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Mock authentication - In a real app, this would connect to your backend\nconst mockUsers: (User & { password: string })[] = [\n  {\n    id: '1',\n    name: 'Forest Admin',\n    email: 'admin@fra.gov.in',\n    password: 'admin123',\n    role: 'admin',\n    department: 'Forest Rights Administration'\n  },\n  {\n    id: '2',\n    name: 'Field Officer',\n    email: 'officer@fra.gov.in',\n    password: 'officer123',\n    role: 'officer',\n    department: 'Field Operations'\n  }\n];\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setLoading(true);\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const foundUser = mockUsers.find(u => u.email === email && u.password === password);\n\n    if (foundUser) {\n      const { password: _, ...userWithoutPassword } = foundUser;\n      setUser(userWithoutPassword);\n      setLoading(false);\n      return true;\n    }\n\n    setLoading(false);\n    return false;\n  };\n\n  const signup = async (userData: SignupData): Promise<boolean> => {\n    setLoading(true);\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Check if user already exists\n    const existingUser = mockUsers.find(u => u.email === userData.email);\n    if (existingUser) {\n      setLoading(false);\n      return false;\n    }\n\n    // In a real app, you would send this to your backend\n    const newUser: User = {\n      id: Date.now().toString(),\n      name: userData.name,\n      email: userData.email,\n      role: userData.role,\n      department: userData.department\n    };\n\n    setUser(newUser);\n    setLoading(false);\n    return true;\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    login,\n    signup,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}"],"names":[],"mappings":";;;;;;;AAEA;AAFA;;;AA+BA,MAAM,4BAAc,IAAA,kOAAa,EAA8B;AAE/D,0EAA0E;AAC1E,MAAM,YAA6C;IACjD;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;QACN,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;QACV,MAAM;QACN,YAAY;IACd;CACD;AAEM,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,6NAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,6NAAQ,EAAC;IAEvC,MAAM,QAAQ,OAAO,OAAe;QAClC,WAAW;QAEX,0BAA0B;QAC1B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,MAAM,YAAY,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;QAE1E,IAAI,WAAW;YACb,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,qBAAqB,GAAG;YAChD,QAAQ;YACR,WAAW;YACX,OAAO;QACT;QAEA,WAAW;QACX,OAAO;IACT;IAEA,MAAM,SAAS,OAAO;QACpB,WAAW;QAEX,0BAA0B;QAC1B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,+BAA+B;QAC/B,MAAM,eAAe,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,KAAK;QACnE,IAAI,cAAc;YAChB,WAAW;YACX,OAAO;QACT;QAEA,qDAAqD;QACrD,MAAM,UAAgB;YACpB,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,KAAK;YACrB,MAAM,SAAS,IAAI;YACnB,YAAY,SAAS,UAAU;QACjC;QAEA,QAAQ;QACR,WAAW;QACX,OAAO;IACT;IAEA,MAAM,SAAS;QACb,QAAQ;IACV;IAEA,MAAM,QAAQ;QACZ;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;IACF;IAEA,qBACE,0PAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,+NAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/LoginSignup.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react';\nimport { TreePine, Shield, Users, Lock, Mail, User, Building, IdCard, Eye, EyeOff, AlertCircle, CheckCircle } from 'lucide-react';\nimport { Button } from '../../../components/ui/button';\nimport { Input } from '../../../components/ui/input';\nimport { Label } from '../../../components/ui/label';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../components/ui/select';\nimport { Alert, AlertDescription } from '../../../components/ui/alert';\nimport { LanguageSwitcher } from './LanguageSwitcher';\nimport { useLanguage } from './LanguageContext';\nimport { useAuth } from './AuthContext';\n\ninterface LoginSignupProps {\n  onSuccess: () => void;\n}\n\nexport function LoginSignup({ onSuccess }: LoginSignupProps) {\n  const [isLogin, setIsLogin] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const { t } = useLanguage();\n  const { login, signup, loading } = useAuth();\n\n  // Login form state\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  type Role = \"officer\" | \"admin\" | \"supervisor\";\n\n    interface SignupData {\n    name: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n    role: Role; // ✅ now supports all roles\n    department: string;\n    employeeId: string;\n    }\n  // Signup form state\n  const [signupData, setSignupData] = useState<SignupData>({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: \"officer\",\n    department: '',\n    employeeId: ''\n  });\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (!loginData.email || !loginData.password) {\n      setError(t('auth.fillAllFields'));\n      return;\n    }\n\n    const success = await login(loginData.email, loginData.password);\n    if (success) {\n      onSuccess();\n    } else {\n      setError(t('auth.invalidCredentials'));\n    }\n  };\n\n  const handleSignup = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    if (!signupData.name || !signupData.email || !signupData.password ||\n        !signupData.confirmPassword || !signupData.department || !signupData.employeeId) {\n      setError(t('auth.fillAllFields'));\n      return;\n    }\n\n    if (signupData.password !== signupData.confirmPassword) {\n      setError(t('auth.passwordMismatch'));\n      return;\n    }\n\n    if (signupData.password.length < 6) {\n      setError(t('auth.passwordTooShort'));\n      return;\n    }\n\n    const success = await signup(signupData);\n    if (success) {\n      setSuccess(t('auth.registrationSuccess'));\n      setTimeout(() => {\n        onSuccess();\n      }, 1500);\n    } else {\n      setError(t('auth.userExists'));\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-green-50/30 flex items-center justify-center p-4 relative\">\n      {/* Background decorative elements */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"absolute top-20 left-10 w-80 h-80 bg-green-100/20 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 right-10 w-72 h-72 bg-emerald-50/30 rounded-full blur-3xl\"></div>\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-green-50/10 rounded-full blur-3xl\"></div>\n      </div>\n\n      {/* Language Switcher */}\n      <div className=\"absolute top-6 right-6 z-20\">\n        <LanguageSwitcher />\n      </div>\n\n      {/* Main Content */}\n      <div className=\"w-full max-w-md relative z-10\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center mb-6\">\n            <div className=\"w-16 h-16 bg-gradient-to-br from-green-600 to-green-700 rounded-2xl flex items-center justify-center shadow-lg\">\n              <TreePine className=\"w-8 h-8 text-white\" />\n            </div>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            {t('auth.portal')}\n          </h1>\n          <p className=\"text-gray-600\">\n            {isLogin ? t('auth.loginSubtitle') : t('auth.signupSubtitle')}\n          </p>\n        </div>\n\n        {/* Auth Card */}\n        <Card className=\"bg-white/95 backdrop-blur-xl border border-gray-200 shadow-xl\">\n          <CardHeader className=\"text-center pb-6\">\n            <CardTitle className=\"text-xl font-semibold text-gray-900\">\n              {isLogin ? t('auth.signIn') : t('auth.createAccount')}\n            </CardTitle>\n            <p className=\"text-sm text-gray-600 mt-2\">\n              {isLogin ? t('auth.signInDescription') : t('auth.signUpDescription')}\n            </p>\n          </CardHeader>\n\n          <CardContent className=\"space-y-6\">\n            {/* Error/Success Messages */}\n            {error && (\n              <Alert className=\"border-red-200 bg-red-50\">\n                <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                <AlertDescription className=\"text-red-800\">{error}</AlertDescription>\n              </Alert>\n            )}\n\n            {success && (\n              <Alert className=\"border-green-200 bg-green-50\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <AlertDescription className=\"text-green-800\">{success}</AlertDescription>\n              </Alert>\n            )}\n\n            {isLogin ? (\n              // Login Form\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">{t('auth.email')}</Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder={t('auth.emailPlaceholder')}\n                      className=\"pl-10 h-12\"\n                      value={loginData.email}\n                      onChange={(e) => setLoginData(prev => ({ ...prev, email: e.target.value }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\">{t('auth.password')}</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder={t('auth.passwordPlaceholder')}\n                      className=\"pl-10 pr-10 h-12\"\n                      value={loginData.password}\n                      onChange={(e) => setLoginData(prev => ({ ...prev, password: e.target.value }))}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"w-4 h-4 text-gray-400\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full h-12 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white font-medium shadow-lg hover:shadow-xl transition-all duration-300\"\n                  disabled={loading}\n                >\n                  {loading ? t('auth.signingIn') : t('auth.signIn')}\n                </Button>\n              </form>\n            ) : (\n              // Signup Form\n              <form onSubmit={handleSignup} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"name\">{t('auth.fullName')}</Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"name\"\n                      type=\"text\"\n                      placeholder={t('auth.fullNamePlaceholder')}\n                      className=\"pl-10 h-12\"\n                      value={signupData.name}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, name: e.target.value }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-email\">{t('auth.email')}</Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"signup-email\"\n                      type=\"email\"\n                      placeholder={t('auth.emailPlaceholder')}\n                      className=\"pl-10 h-12\"\n                      value={signupData.email}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, email: e.target.value }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"employee-id\">{t('auth.employeeId')}</Label>\n                  <div className=\"relative\">\n                    <IdCard className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"employee-id\"\n                      type=\"text\"\n                      placeholder={t('auth.employeeIdPlaceholder')}\n                      className=\"pl-10 h-12\"\n                      value={signupData.employeeId}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, employeeId: e.target.value }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"role\">{t('auth.role')}</Label>\n                  <Select value={signupData.role} onValueChange={(value: 'admin' | 'officer' | 'supervisor') =>\n                    setSignupData(prev => ({ ...prev, role: value }))}>\n                    <SelectTrigger className=\"h-12\">\n                      <SelectValue placeholder={t('auth.selectRole')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"admin\">{t('auth.roles.admin')}</SelectItem>\n                      <SelectItem value=\"officer\">{t('auth.roles.officer')}</SelectItem>\n                      <SelectItem value=\"supervisor\">{t('auth.roles.supervisor')}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"department\">{t('auth.department')}</Label>\n                  <div className=\"relative\">\n                    <Building className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"department\"\n                      type=\"text\"\n                      placeholder={t('auth.departmentPlaceholder')}\n                      className=\"pl-10 h-12\"\n                      value={signupData.department}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, department: e.target.value }))}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-password\">{t('auth.password')}</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"signup-password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder={t('auth.passwordPlaceholder')}\n                      className=\"pl-10 pr-10 h-12\"\n                      value={signupData.password}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, password: e.target.value }))}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"w-4 h-4 text-gray-400\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"confirm-password\">{t('auth.confirmPassword')}</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                    <Input\n                      id=\"confirm-password\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      placeholder={t('auth.confirmPasswordPlaceholder')}\n                      className=\"pl-10 pr-10 h-12\"\n                      value={signupData.confirmPassword}\n                      onChange={(e) => setSignupData(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    >\n                      {showConfirmPassword ? (\n                        <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"w-4 h-4 text-gray-400\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full h-12 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white font-medium shadow-lg hover:shadow-xl transition-all duration-300\"\n                  disabled={loading}\n                >\n                  {loading ? t('auth.creatingAccount') : t('auth.createAccount')}\n                </Button>\n              </form>\n            )}\n\n            {/* Toggle between login and signup */}\n            <div className=\"text-center pt-6 border-t border-gray-200\">\n              <p className=\"text-gray-600\">\n                {isLogin ? t('auth.noAccount') : t('auth.haveAccount')}\n              </p>\n              <Button\n                variant=\"ghost\"\n                onClick={() => {\n                  setIsLogin(!isLogin);\n                  setError('');\n                  setSuccess('');\n                }}\n                className=\"text-green-600 hover:text-green-700 hover:bg-green-50 mt-2\"\n              >\n                {isLogin ? t('auth.signUp') : t('auth.signIn')}\n              </Button>\n            </div>\n\n            {/* Security badges */}\n            <div className=\"flex items-center justify-center space-x-6 pt-4 border-t border-gray-200\">\n              <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                <Shield className=\"w-4 h-4 text-green-600\" />\n                <span>{t('common.secureVerified')}</span>\n              </div>\n              <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                <Users className=\"w-4 h-4 text-green-600\" />\n                <span>{t('common.govCertified')}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Demo credentials notice */}\n        <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <h4 className=\"font-medium text-blue-900 mb-2\">{t('auth.demoCredentials')}</h4>\n          <div className=\"space-y-1 text-sm text-blue-800\">\n            <p><strong>{t('auth.admin')}:</strong> admin@fra.gov.in / admin123</p>\n            <p><strong>{t('auth.officer')}:</strong> officer@fra.gov.in / officer123</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/AIQuickAnalysis.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Brain,\n  Zap,\n  TrendingUp,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Eye,\n  RotateCw,\n  Sparkles\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\nimport { Button } from '../../../components/ui/button';\nimport { Badge } from '../../../components/ui/badge';\nimport { Progress } from '../../../components/ui/progress';\n\ninterface QuickAnalysisProps {\n  claimId: string;\n  onOpenFullAnalysis: (claimId: string) => void;\n}\n\ninterface QuickAnalysisData {\n  overallScore: number;\n  recommendation: 'approve' | 'reject' | 'review';\n  confidence: number;\n  riskLevel: 'low' | 'medium' | 'high';\n  processingStatus: 'idle' | 'analyzing' | 'completed';\n  keyIssues: number;\n  documentsAnalyzed: number;\n  totalDocuments: number;\n}\n\nexport function AIQuickAnalysis({ claimId, onOpenFullAnalysis }: QuickAnalysisProps) {\n  const [analysisData, setAnalysisData] = useState<QuickAnalysisData>({\n    overallScore: 78,\n    recommendation: 'review',\n    confidence: 85,\n    riskLevel: 'medium',\n    processingStatus: 'completed',\n    keyIssues: 2,\n    documentsAnalyzed: 6,\n    totalDocuments: 8\n  });\n\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const runQuickAnalysis = () => {\n    setIsProcessing(true);\n    setAnalysisData(prev => ({ ...prev, processingStatus: 'analyzing' }));\n\n    // Simulate AI processing\n    setTimeout(() => {\n      setIsProcessing(false);\n      setAnalysisData(prev => ({\n        ...prev,\n        processingStatus: 'completed',\n        overallScore: Math.floor(Math.random() * 20) + 75,\n        confidence: Math.floor(Math.random() * 15) + 80\n      }));\n    }, 2500);\n  };\n\n  const getRecommendationConfig = (recommendation: string) => {\n    switch (recommendation) {\n      case 'approve':\n        return {\n          icon: CheckCircle,\n          color: 'text-green-600',\n          bgColor: 'bg-green-50',\n          borderColor: 'border-green-200'\n        };\n      case 'reject':\n        return {\n          icon: XCircle,\n          color: 'text-red-600',\n          bgColor: 'bg-red-50',\n          borderColor: 'border-red-200'\n        };\n      case 'review':\n        return {\n          icon: AlertTriangle,\n          color: 'text-yellow-600',\n          bgColor: 'bg-yellow-50',\n          borderColor: 'border-yellow-200'\n        };\n      default:\n        return {\n          icon: AlertTriangle,\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-50',\n          borderColor: 'border-gray-200'\n        };\n    }\n  };\n\n  const getRiskColor = (risk: string) => {\n    switch (risk) {\n      case 'low': return 'text-green-600 bg-green-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'high': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const recommendationConfig = getRecommendationConfig(analysisData.recommendation);\n  const RecommendationIcon = recommendationConfig.icon;\n\n  return (\n    <Card className=\"bg-gradient-to-br from-green-50 via-emerald-50 to-blue-50 border-green-200 shadow-lg hover:shadow-xl transition-all duration-300\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg flex items-center\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-green-600 to-emerald-700 rounded-lg flex items-center justify-center mr-3\">\n              <Brain className=\"w-5 h-5 text-white\" />\n            </div>\n            AI Analysis\n          </CardTitle>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={runQuickAnalysis}\n            disabled={isProcessing}\n            className=\"text-green-600 hover:text-green-700 hover:bg-green-100\"\n          >\n            <RotateCw className={`w-4 h-4 mr-1 ${isProcessing ? 'animate-spin' : ''}`} />\n            {isProcessing ? 'Analyzing...' : 'Refresh'}\n          </Button>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {analysisData.processingStatus === 'analyzing' ? (\n          <div className=\"text-center py-8\">\n            <div className=\"w-12 h-12 bg-gradient-to-r from-green-600 to-emerald-700 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Sparkles className=\"w-6 h-6 text-white animate-pulse\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-2\">AI Analysis in Progress</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">Analyzing documents, maps, and satellite imagery...</p>\n            <Progress value={65} className=\"h-2\" />\n          </div>\n        ) : (\n          <>\n            {/* Overall Score */}\n            <div className=\"flex items-center justify-between p-4 bg-white/60 backdrop-blur-sm rounded-xl border border-green-200\">\n              <div>\n                <h3 className=\"font-medium text-gray-900\">Overall Score</h3>\n                <div className=\"flex items-center mt-1\">\n                  <div className=\"text-2xl font-bold text-green-700 mr-2\">\n                    {analysisData.overallScore}%\n                  </div>\n                  <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <Progress value={analysisData.overallScore} className=\"h-3 w-24 mb-1\" />\n                <p className=\"text-xs text-gray-600\">AI Confidence: {analysisData.confidence}%</p>\n              </div>\n            </div>\n\n            {/* Recommendation */}\n            <div className={`flex items-center justify-between p-4 ${recommendationConfig.bgColor} rounded-xl border ${recommendationConfig.borderColor}`}>\n              <div className=\"flex items-center\">\n                <RecommendationIcon className={`w-6 h-6 ${recommendationConfig.color} mr-3`} />\n                <div>\n                  <h3 className=\"font-medium text-gray-900\">AI Recommendation</h3>\n                  <div className=\"flex items-center mt-1\">\n                    <span className={`text-lg font-semibold capitalize ${recommendationConfig.color}`}>\n                      {analysisData.recommendation}\n                    </span>\n                    <Badge variant=\"outline\" className={`ml-2 ${getRiskColor(analysisData.riskLevel)}`}>\n                      {analysisData.riskLevel.toUpperCase()} Risk\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-3 gap-3\">\n              <div className=\"text-center p-3 bg-white/60 backdrop-blur-sm rounded-lg border border-green-100\">\n                <div className=\"text-lg font-bold text-blue-600\">\n                  {analysisData.documentsAnalyzed}/{analysisData.totalDocuments}\n                </div>\n                <p className=\"text-xs text-gray-600\">Documents</p>\n              </div>\n              <div className=\"text-center p-3 bg-white/60 backdrop-blur-sm rounded-lg border border-green-100\">\n                <div className=\"text-lg font-bold text-yellow-600\">{analysisData.keyIssues}</div>\n                <p className=\"text-xs text-gray-600\">Key Issues</p>\n              </div>\n              <div className=\"text-center p-3 bg-white/60 backdrop-blur-sm rounded-lg border border-green-100\">\n                <div className=\"text-lg font-bold text-purple-600\">{analysisData.confidence}%</div>\n                <p className=\"text-xs text-gray-600\">Confidence</p>\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-2 pt-2\">\n              <Button\n                onClick={() => onOpenFullAnalysis(claimId)}\n                className=\"flex-1 bg-gradient-to-r from-green-600 to-emerald-700 hover:from-green-700 hover:to-emerald-800 text-sm\"\n              >\n                <Eye className=\"w-4 h-4 mr-2\" />\n                View Full Analysis\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"text-green-600 border-green-300 hover:bg-green-50\"\n              >\n                <Zap className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {/* Key Insights */}\n            {analysisData.keyIssues > 0 && (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                <div className=\"flex items-center mb-2\">\n                  <AlertTriangle className=\"w-4 h-4 text-yellow-600 mr-2\" />\n                  <span className=\"text-sm font-medium text-yellow-800\">Key Issues Detected</span>\n                </div>\n                <ul className=\"text-xs text-yellow-700 space-y-1\">\n                  <li>• Satellite imagery shows boundary discrepancies</li>\n                  <li>• Missing community certificate verification</li>\n                </ul>\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;;;;;;;;AAkBO,SAAS,gBAAgB,EAAE,OAAO,EAAE,kBAAkB,EAAsB;IACjF,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,6NAAQ,EAAoB;QAClE,cAAc;QACd,gBAAgB;QAChB,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,WAAW;QACX,mBAAmB;QACnB,gBAAgB;IAClB;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,6NAAQ,EAAC;IAEjD,MAAM,mBAAmB;QACvB,gBAAgB;QAChB,gBAAgB,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,kBAAkB;YAAY,CAAC;QAEnE,yBAAyB;QACzB,WAAW;YACT,gBAAgB;YAChB,gBAAgB,CAAA,OAAQ,CAAC;oBACvB,GAAG,IAAI;oBACP,kBAAkB;oBAClB,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;oBAC/C,YAAY,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;gBAC/C,CAAC;QACH,GAAG;IACL;IAEA,MAAM,0BAA0B,CAAC;QAC/B,OAAQ;YACN,KAAK;gBACH,OAAO;oBACL,MAAM,sPAAW;oBACjB,OAAO;oBACP,SAAS;oBACT,aAAa;gBACf;YACF,KAAK;gBACH,OAAO;oBACL,MAAM,mOAAO;oBACb,OAAO;oBACP,SAAS;oBACT,aAAa;gBACf;YACF,KAAK;gBACH,OAAO;oBACL,MAAM,qPAAa;oBACnB,OAAO;oBACP,SAAS;oBACT,aAAa;gBACf;YACF;gBACE,OAAO;oBACL,MAAM,qPAAa;oBACnB,OAAO;oBACP,SAAS;oBACT,aAAa;gBACf;QACJ;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,OAAQ;YACN,KAAK;gBAAO,OAAO;YACnB,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAQ,OAAO;YACpB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,uBAAuB,wBAAwB,aAAa,cAAc;IAChF,MAAM,qBAAqB,qBAAqB,IAAI;IAEpD,qBACE,0PAAC,6IAAI;QAAC,WAAU;;0BACd,0PAAC,mJAAU;gBAAC,WAAU;0BACpB,cAAA,0PAAC;oBAAI,WAAU;;sCACb,0PAAC,kJAAS;4BAAC,WAAU;;8CACnB,0PAAC;oCAAI,WAAU;8CACb,cAAA,0PAAC,yNAAK;wCAAC,WAAU;;;;;;;;;;;gCACb;;;;;;;sCAGR,0PAAC,iJAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,UAAU;4BACV,WAAU;;8CAEV,0PAAC,sOAAQ;oCAAC,WAAW,CAAC,aAAa,EAAE,eAAe,iBAAiB,IAAI;;;;;;gCACxE,eAAe,iBAAiB;;;;;;;;;;;;;;;;;;0BAKvC,0PAAC,oJAAW;gBAAC,WAAU;0BACpB,aAAa,gBAAgB,KAAK,4BACjC,0PAAC;oBAAI,WAAU;;sCACb,0PAAC;4BAAI,WAAU;sCACb,cAAA,0PAAC,kOAAQ;gCAAC,WAAU;;;;;;;;;;;sCAEtB,0PAAC;4BAAG,WAAU;sCAAiC;;;;;;sCAC/C,0PAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAC1C,0PAAC,qJAAQ;4BAAC,OAAO;4BAAI,WAAU;;;;;;;;;;;yCAGjC;;sCAEE,0PAAC;4BAAI,WAAU;;8CACb,0PAAC;;sDACC,0PAAC;4CAAG,WAAU;sDAA4B;;;;;;sDAC1C,0PAAC;4CAAI,WAAU;;8DACb,0PAAC;oDAAI,WAAU;;wDACZ,aAAa,YAAY;wDAAC;;;;;;;8DAE7B,0PAAC,4OAAU;oDAAC,WAAU;;;;;;;;;;;;;;;;;;8CAG1B,0PAAC;oCAAI,WAAU;;sDACb,0PAAC,qJAAQ;4CAAC,OAAO,aAAa,YAAY;4CAAE,WAAU;;;;;;sDACtD,0PAAC;4CAAE,WAAU;;gDAAwB;gDAAgB,aAAa,UAAU;gDAAC;;;;;;;;;;;;;;;;;;;sCAKjF,0PAAC;4BAAI,WAAW,CAAC,sCAAsC,EAAE,qBAAqB,OAAO,CAAC,mBAAmB,EAAE,qBAAqB,WAAW,EAAE;sCAC3I,cAAA,0PAAC;gCAAI,WAAU;;kDACb,0PAAC;wCAAmB,WAAW,CAAC,QAAQ,EAAE,qBAAqB,KAAK,CAAC,KAAK,CAAC;;;;;;kDAC3E,0PAAC;;0DACC,0PAAC;gDAAG,WAAU;0DAA4B;;;;;;0DAC1C,0PAAC;gDAAI,WAAU;;kEACb,0PAAC;wDAAK,WAAW,CAAC,iCAAiC,EAAE,qBAAqB,KAAK,EAAE;kEAC9E,aAAa,cAAc;;;;;;kEAE9B,0PAAC,+IAAK;wDAAC,SAAQ;wDAAU,WAAW,CAAC,KAAK,EAAE,aAAa,aAAa,SAAS,GAAG;;4DAC/E,aAAa,SAAS,CAAC,WAAW;4DAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQhD,0PAAC;4BAAI,WAAU;;8CACb,0PAAC;oCAAI,WAAU;;sDACb,0PAAC;4CAAI,WAAU;;gDACZ,aAAa,iBAAiB;gDAAC;gDAAE,aAAa,cAAc;;;;;;;sDAE/D,0PAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;8CAEvC,0PAAC;oCAAI,WAAU;;sDACb,0PAAC;4CAAI,WAAU;sDAAqC,aAAa,SAAS;;;;;;sDAC1E,0PAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;8CAEvC,0PAAC;oCAAI,WAAU;;sDACb,0PAAC;4CAAI,WAAU;;gDAAqC,aAAa,UAAU;gDAAC;;;;;;;sDAC5E,0PAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;sCAKzC,0PAAC;4BAAI,WAAU;;8CACb,0PAAC,iJAAM;oCACL,SAAS,IAAM,mBAAmB;oCAClC,WAAU;;sDAEV,0PAAC,mNAAG;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAGlC,0PAAC,iJAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,WAAU;8CAEV,cAAA,0PAAC,mNAAG;wCAAC,WAAU;;;;;;;;;;;;;;;;;wBAKlB,aAAa,SAAS,GAAG,mBACxB,0PAAC;4BAAI,WAAU;;8CACb,0PAAC;oCAAI,WAAU;;sDACb,0PAAC,qPAAa;4CAAC,WAAU;;;;;;sDACzB,0PAAC;4CAAK,WAAU;sDAAsC;;;;;;;;;;;;8CAExD,0PAAC;oCAAG,WAAU;;sDACZ,0PAAC;sDAAG;;;;;;sDACJ,0PAAC;sDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAStB","debugId":null}},
    {"offset": {"line": 2388, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/OCRProcessor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useCallback, useRef } from 'react'\nimport { Upload, File, Eye, Download, Trash2, CheckCircle, AlertCircle, Clock, User, MapPin, Calendar, Hash } from 'lucide-react'\nimport { Button } from '../../../components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card'\nimport { Badge } from '../../../components/ui/badge'\nimport { Progress } from '../../../components/ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../../components/ui/tabs'\nimport { ScrollArea } from '../../../components/ui/scroll-area'\nimport { Separator } from '../../../components/ui/separator'\nimport { useLanguage } from './LanguageContext'\nimport { API_CONFIG } from '../config/api'\n\ninterface ExtractedEntity {\n  text: string\n  label: string\n  confidence: number\n  start: number\n  end: number\n}\n\ninterface OCRResult {\n  id: string\n  filename: string\n  uploadTime: Date\n  status: 'processing' | 'completed' | 'error'\n  progress: number\n  extractedText?: string\n  entities?: ExtractedEntity[]\n  metadata?: {\n    pageCount: number\n    language: string\n    fileSize: string\n  }\n}\n\nexport function OCRProcessor() {\n  const { t, language } = useLanguage()\n  const [files, setFiles] = useState<OCRResult[]>([])\n  const [selectedFile, setSelectedFile] = useState<OCRResult | null>(null)\n  const [dragActive, setDragActive] = useState(false)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  // Real OCR processing with backend API\n  const processFile = useCallback(async (file: File): Promise<OCRResult> => {\n    const result: OCRResult = {\n      id: '', // Will be set from backend response\n      filename: file.name,\n      uploadTime: new Date(),\n      status: 'processing',\n      progress: 0,\n      metadata: {\n        pageCount: 1, // Will be updated from backend\n        language: language === 'hi' ? 'Hindi' : 'English',\n        fileSize: `${(file.size / 1024 / 1024).toFixed(2)} MB`\n      }\n    }\n\n    try {\n      // Upload file to backend\n      const formData = new FormData()\n      formData.append('file', file)\n\n      const uploadResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.OCR.UPLOAD}`, {\n        method: 'POST',\n        body: formData,\n      })\n\n      if (!uploadResponse.ok) {\n        throw new Error(`Upload failed: ${uploadResponse.statusText}`)\n      }\n\n      const uploadData = await uploadResponse.json()\n      result.id = uploadData.task_id\n\n      setFiles(prev => [...prev, result])\n\n      // Poll for processing status\n      const pollInterval = setInterval(async () => {\n        try {\n          const statusResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.OCR.STATUS}/${result.id}`)\n          if (!statusResponse.ok) {\n            throw new Error(`Status check failed: ${statusResponse.statusText}`)\n          }\n\n          const statusData = await statusResponse.json()\n          \n          setFiles(prev => prev.map(f => \n            f.id === result.id \n              ? { ...f, progress: statusData.progress, status: statusData.status }\n              : f\n          ))\n\n          if (statusData.status === 'completed') {\n            clearInterval(pollInterval)\n            \n            // Get the final result\n            const resultResponse = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.OCR.RESULT}/${result.id}`)\n            if (resultResponse.ok) {\n              const resultData = await resultResponse.json()\n              \n              // Parse entities from backend result\n              const entities: ExtractedEntity[] = []\n              if (resultData.result?.extraction?.entities) {\n                entities.push(...resultData.result.extraction.entities.map((entity: any) => ({\n                  text: entity.text || entity.word || '',\n                  label: entity.label || 'UNKNOWN',\n                  confidence: entity.confidence || 0,\n                  start: entity.start_pos || 0,\n                  end: entity.end_pos || 0\n                })))\n              }\n\n              setFiles(prev => prev.map(f => \n                f.id === result.id \n                  ? { \n                      ...f, \n                      status: 'completed',\n                      progress: 100,\n                      extractedText: resultData.result?.extraction?.full_text || '',\n                      entities: entities\n                    }\n                  : f\n              ))\n            }\n          } else if (statusData.status === 'error') {\n            clearInterval(pollInterval)\n            setFiles(prev => prev.map(f => \n              f.id === result.id \n                ? { ...f, status: 'error' }\n                : f\n            ))\n          }\n        } catch (error) {\n          console.error('Error polling status:', error)\n          clearInterval(pollInterval)\n          setFiles(prev => prev.map(f => \n            f.id === result.id \n              ? { ...f, status: 'error' }\n              : f\n          ))\n        }\n      }, 2000) // Poll every 2 seconds\n\n    } catch (error) {\n      console.error('Error uploading file:', error)\n      result.status = 'error'\n      setFiles(prev => [...prev, result])\n    }\n\n    return result\n  }, [language])\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true)\n    } else if (e.type === 'dragleave') {\n      setDragActive(false)\n    }\n  }\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragActive(false)\n\n    const droppedFiles = Array.from(e.dataTransfer.files)\n    droppedFiles.forEach(file => {\n      if (file.type === 'application/pdf' || file.type.startsWith('image/')) {\n        processFile(file)\n      }\n    })\n  }\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      Array.from(e.target.files).forEach(file => {\n        if (file.type === 'application/pdf' || file.type.startsWith('image/')) {\n          processFile(file)\n        }\n      })\n    }\n  }\n\n  const deleteFile = async (id: string) => {\n    try {\n      // Call backend API to delete the task\n      const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.OCR.DELETE}/${id}`, {\n        method: 'DELETE',\n      })\n\n      if (!response.ok) {\n        throw new Error(`Delete failed: ${response.statusText}`)\n      }\n\n      // Remove from local state\n      setFiles(prev => prev.filter(f => f.id !== id))\n      if (selectedFile?.id === id) {\n        setSelectedFile(null)\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error)\n      // Still remove from local state even if backend call fails\n      setFiles(prev => prev.filter(f => f.id !== id))\n      if (selectedFile?.id === id) {\n        setSelectedFile(null)\n      }\n    }\n  }\n\n  const getEntityColor = (label: string) => {\n    const colors: Record<string, string> = {\n      'PERSON': 'bg-blue-100 text-blue-800 border-blue-200',\n      'LOCATION': 'bg-green-100 text-green-800 border-green-200',\n      'STATE': 'bg-purple-100 text-purple-800 border-purple-200',\n      'AADHAAR': 'bg-red-100 text-red-800 border-red-200',\n      'PHONE': 'bg-orange-100 text-orange-800 border-orange-200',\n      'DATE': 'bg-indigo-100 text-indigo-800 border-indigo-200',\n      'APPLICATION_ID': 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      'AREA': 'bg-teal-100 text-teal-800 border-teal-200',\n      'SURVEY_NUMBER': 'bg-pink-100 text-pink-800 border-pink-200',\n      'YEAR': 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n    return colors[label] || 'bg-gray-100 text-gray-800 border-gray-200'\n  }\n\n  const getEntityIcon = (label: string) => {\n    const icons: Record<string, React.ReactNode> = {\n      'PERSON': <User className=\"w-3 h-3\" />,\n      'LOCATION': <MapPin className=\"w-3 h-3\" />,\n      'STATE': <MapPin className=\"w-3 h-3\" />,\n      'DATE': <Calendar className=\"w-3 h-3\" />,\n      'APPLICATION_ID': <Hash className=\"w-3 h-3\" />,\n      'PHONE': <Hash className=\"w-3 h-3\" />,\n      'AADHAAR': <Hash className=\"w-3 h-3\" />\n    }\n    return icons[label] || <Hash className=\"w-3 h-3\" />\n  }\n\n  return (\n    <div className=\"space-y-6 animate-fade-in\">\n      {/* Header */}\n      <div className=\"flex flex-col space-y-4\">\n        <div>\n          <h1 className=\"text-gradient\">{language === 'hi' ? 'ओसीआर + एनईआर दस्तावेज़ प्रसंस्करण' : 'OCR + NER Document Processing'}</h1>\n          <p className=\"text-gray-600\">\n            {language === 'hi'\n              ? 'दस्तावेजों को अपलोड करें और स्वचालित टेक्स्ट निष्कर्षण और नामित इकाई पहचान का उपयोग क���के उनका विश्लेषण करें'\n              : 'Upload documents and analyze them using automated text extraction and named entity recognition'\n            }\n          </p>\n        </div>\n\n        {/* Upload Area */}\n        <Card className=\"government-card\">\n          <CardContent className=\"p-6\">\n            <div\n              className={`relative border-2 border-dashed rounded-lg p-8 text-center transition-all duration-300 ${\n                dragActive\n                  ? 'border-green-500 bg-green-50'\n                  : 'border-gray-300 hover:border-green-400 hover:bg-green-50/30'\n              }`}\n              onDragEnter={handleDrag}\n              onDragLeave={handleDrag}\n              onDragOver={handleDrag}\n              onDrop={handleDrop}\n            >\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                multiple\n                accept=\".pdf,.png,.jpg,.jpeg\"\n                onChange={handleFileSelect}\n                className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n              />\n              <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <div className=\"space-y-2\">\n                <h3 className=\"font-medium text-gray-900\">\n                  {language === 'hi' ? 'दस्तावेज़ अपलोड करें' : 'Upload Documents'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {language === 'hi'\n                    ? 'PDF, PNG, JPG फाइलों को यहाँ खींचकर छोड़ें या क्लिक करके चुनें'\n                    : 'Drag and drop PDF, PNG, JPG files here or click to select'\n                  }\n                </p>\n                <Button variant=\"outline\" size=\"sm\">\n                  {language === 'hi' ? 'फाइल चुनें' : 'Choose Files'}\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* File List */}\n        <Card className=\"government-card\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <File className=\"w-5 h-5\" />\n              <span>{language === 'hi' ? 'अपलोड की गई फाइलें' : 'Uploaded Files'}</span>\n              <Badge variant=\"secondary\" className=\"ml-auto\">\n                {files.length}\n              </Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ScrollArea className=\"h-96\">\n              <div className=\"space-y-3\">\n                {files.length === 0 ? (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    <File className=\"mx-auto h-8 w-8 mb-2\" />\n                    <p className=\"text-sm\">\n                      {language === 'hi' ? 'कोई फाइल अपलोड नहीं की गई' : 'No files uploaded yet'}\n                    </p>\n                  </div>\n                ) : (\n                  files.map((file) => (\n                    <Card key={file.id} className={`cursor-pointer transition-all duration-200 ${selectedFile?.id === file.id ? 'ring-2 ring-green-500 bg-green-50' : 'hover:shadow-md'}`} onClick={() => setSelectedFile(file)}>\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-start justify-between space-x-3\">\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <File className=\"w-4 h-4 text-gray-400 flex-shrink-0\" />\n                              <span className=\"text-sm font-medium text-gray-900 truncate\">\n                                {file.filename}\n                              </span>\n                              <div className=\"flex items-center space-x-1\">\n                                {file.status === 'completed' && (\n                                  <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                                )}\n                                {file.status === 'processing' && (\n                                  <Clock className=\"w-4 h-4 text-orange-500 animate-pulse\" />\n                                )}\n                                {file.status === 'error' && (\n                                  <AlertCircle className=\"w-4 h-4 text-red-500\" />\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"text-xs text-gray-600 space-y-1\">\n                              <p>{file.uploadTime.toLocaleString()}</p>\n                              {file.metadata && (\n                                <p>{file.metadata.fileSize} • {file.metadata.pageCount} pages</p>\n                              )}\n                            </div>\n                            {file.status === 'processing' && (\n                              <div className=\"mt-2\">\n                                <Progress value={file.progress} className=\"h-1\" />\n                                <p className=\"text-xs text-gray-500 mt-1\">\n                                  {language === 'hi' ? 'प्रसंस्करण' : 'Processing'}... {file.progress}%\n                                </p>\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"flex items-center space-x-1\">\n                            {file.status === 'completed' && (\n                              <Button variant=\"ghost\" size=\"sm\">\n                                <Eye className=\"w-4 h-4\" />\n                              </Button>\n                            )}\n                            <Button variant=\"ghost\" size=\"sm\" onClick={(e) => { e.stopPropagation(); deleteFile(file.id) }}>\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))\n                )}\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n\n        {/* Results Panel */}\n        <Card className=\"government-card\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Eye className=\"w-5 h-5\" />\n              <span>{language === 'hi' ? 'परिणाम' : 'Results'}</span>\n              {selectedFile && (\n                <Badge variant=\"outline\" className=\"ml-auto\">\n                  {selectedFile.filename}\n                </Badge>\n              )}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {!selectedFile ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Eye className=\"mx-auto h-8 w-8 mb-2\" />\n                <p className=\"text-sm\">\n                  {language === 'hi' ? 'परिणाम देखने के लिए एक फाइल चुनें' : 'Select a file to view results'}\n                </p>\n              </div>\n            ) : selectedFile.status === 'processing' ? (\n              <div className=\"text-center py-8\">\n                <Clock className=\"mx-auto h-8 w-8 mb-2 text-orange-500 animate-pulse\" />\n                <p className=\"text-sm text-gray-600\">\n                  {language === 'hi' ? 'प्रसंस्करण जारी है...' : 'Processing in progress...'}\n                </p>\n                <Progress value={selectedFile.progress} className=\"mt-4 max-w-xs mx-auto\" />\n              </div>\n            ) : selectedFile.status === 'error' ? (\n              <div className=\"text-center py-8\">\n                <AlertCircle className=\"mx-auto h-8 w-8 mb-2 text-red-500\" />\n                <p className=\"text-sm text-red-600\">\n                  {language === 'hi' ? 'प्रसंस्करण में त्रुटि हुई' : 'Processing error occurred'}\n                </p>\n              </div>\n            ) : (\n              <Tabs defaultValue=\"text\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2\">\n                  <TabsTrigger value=\"text\">{language === 'hi' ? 'निकाला गया टेक्स्ट' : 'Extracted Text'}</TabsTrigger>\n                  <TabsTrigger value=\"entities\">{language === 'hi' ? 'नामित इकाइयाँ' : 'Named Entities'}</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"text\" className=\"mt-4\">\n                  <Card>\n                    <CardHeader className=\"pb-3\">\n                      <CardTitle className=\"text-sm font-medium flex items-center justify-between\">\n                        {language === 'hi' ? 'ओसीआर आउटपुट' : 'OCR Output'}\n                        <Button variant=\"outline\" size=\"sm\">\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          {language === 'hi' ? 'डाउनलोड' : 'Download'}\n                        </Button>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <ScrollArea className=\"h-64\">\n                        <pre className=\"text-sm text-gray-700 whitespace-pre-wrap font-mono bg-gray-50 p-3 rounded border\">\n                          {selectedFile.extractedText}\n                        </pre>\n                      </ScrollArea>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"entities\" className=\"mt-4\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"text-sm font-medium\">\n                        {language === 'hi' ? 'पहचानी गई इकाइयाँ' : 'Identified Entities'}\n                      </h4>\n                      <Badge variant=\"outline\">\n                        {selectedFile.entities?.length || 0} {language === 'hi' ? 'इकाइयाँ' : 'entities'}\n                      </Badge>\n                    </div>\n\n                    <ScrollArea className=\"h-64\">\n                      <div className=\"space-y-3\">\n                        {selectedFile.entities?.map((entity, index) => (\n                          <Card key={index} className=\"border border-gray-200\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-start justify-between space-x-3\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center space-x-2 mb-2\">\n                                    <Badge variant=\"outline\" className={getEntityColor(entity.label)}>\n                                      {getEntityIcon(entity.label)}\n                                      <span className=\"ml-1 text-xs font-medium\">{entity.label}</span>\n                                    </Badge>\n                                    <Badge variant=\"secondary\" className=\"text-xs\">\n                                      {Math.round(entity.confidence * 100)}%\n                                    </Badge>\n                                  </div>\n                                  <p className=\"font-medium text-sm text-gray-900 bg-yellow-50 px-2 py-1 rounded border border-yellow-200\">\n                                    \"{entity.text}\"\n                                  </p>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        ))}\n                      </div>\n                    </ScrollArea>\n                  </div>\n                </TabsContent>\n              </Tabs>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3450, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/Layout.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react';\n// Remove Next.js imports\nimport {\n  MapPin,\n  FileText,\n  TreePine,\n  BarChart3,\n  Upload,\n  Search,\n  Bell,\n  Settings,\n  User,\n  Menu,\n  X,\n  PlusCircle,\n  LogOut,\n  ArrowLeft,\n  Scan\n} from 'lucide-react';\nimport { Button } from '../../../components/ui/button';\nimport { Input } from '../../../components/ui/input';\nimport { Avatar, AvatarFallback, AvatarImage } from '../../../components/ui/avatar';\nimport { LanguageSwitcher } from './LanguageSwitcher';\nimport { useLanguage } from './LanguageContext';\nimport { useAuth } from './AuthContext';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '../../../components/ui/alert-dialog';\n\ntype Page =\n  | 'landing'\n  | 'auth'\n  | 'dashboard'\n  | 'submit-claim'\n  | 'claims'\n  | 'allotments'\n  | 'documents'\n  | 'ocr-processing'\n  | 'atlas';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  activeTab?: Page;\n  onNavigate?: (page: Page) => void;\n}\n\nexport function Layout({ children, activeTab, onNavigate }: LayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const { t } = useLanguage();\n  const { user, logout } = useAuth();\n\n  const navItems: { id: Page; label: string; icon: any }[] = [\n    { id: 'dashboard', label: t('sidebar.dashboard'), icon: BarChart3 },\n    { id: 'submit-claim', label: t('sidebar.submitClaim'), icon: PlusCircle },\n    { id: 'claims', label: t('sidebar.claims'), icon: FileText },\n    { id: 'allotments', label: t('sidebar.allotments'), icon: TreePine },\n    { id: 'documents', label: t('sidebar.documents'), icon: Upload },\n    { id: 'ocr-processing', label: t('sidebar.ocrProcessing'), icon: Scan },\n    {id: 'atlas', label: t('sidebar.atlas'), icon: Scan},\n  ];\n\n  const currentTab = activeTab || 'dashboard';\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-gray-50/30 to-green-50/30 flex\">\n      {/* Background decorative elements - more subtle */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"absolute top-20 left-10 w-80 h-80 bg-green-100/30 rounded-full blur-3xl\"></div>\n        <div className=\"absolute bottom-20 right-10 w-72 h-72 bg-emerald-50/40 rounded-full blur-3xl\"></div>\n      </div>\n\n      {/* Mobile menu overlay */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/30 backdrop-blur-sm z-40 lg:hidden transition-opacity duration-300\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <aside className={`\n        fixed top-0 left-0 z-50 h-screen w-64 bg-white/98 backdrop-blur-xl border-r border-gray-200 shadow-lg\n        transform transition-all duration-300 ease-in-out overflow-y-auto\n        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}\n        lg:translate-x-0 lg:relative lg:z-auto lg:shadow-none lg:flex lg:flex-shrink-0\n      `}>\n        <div className=\"flex flex-col h-full\">\n          {/* Header */}\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-green-600 to-green-700 rounded-lg flex items-center justify-center shadow-md\">\n                  <TreePine className=\"w-7 h-7 text-white\" />\n                </div>\n                <div>\n                  <h1 className=\"text-lg font-bold text-gray-900\">{t('nav.portal')}</h1>\n                  <p className=\"text-xs text-gray-600\">{t('nav.subtitle')}</p>\n                </div>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"lg:hidden hover:bg-red-50 hover:text-red-700 transition-colors duration-200\"\n                onClick={() => setSidebarOpen(false)}\n              >\n                <X className=\"w-5 h-5\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"flex-1 p-4\">\n            <ul className=\"space-y-2\">\n              {navItems.map((item, index) => {\n                const Icon = item.icon;\n                return (\n                  <li key={item.id} className=\"animate-slide-in-left\" style={{ animationDelay: `${index * 0.1}s` }}>\n                    <button\n                      onClick={() => {\n                        setSidebarOpen(false);\n                        onNavigate?.(item.id);\n                      }}\n                      className={`\n                        w-full flex items-center space-x-3 px-4 py-3 rounded-lg transition-all duration-300 group relative overflow-hidden\n                        ${currentTab === item.id\n                          ? 'bg-green-600 text-white shadow-md'\n                          : 'text-gray-700 hover:bg-green-50 hover:text-green-800 hover:shadow-sm'\n                        }\n                      `}\n                    >\n                      <Icon className={`w-5 h-5 transition-all duration-300 ${\n                        currentTab === item.id ? 'text-white' : 'text-gray-500 group-hover:text-green-600'\n                      }`} />\n                      <span className=\"text-sm font-medium\">{item.label}</span>\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </nav>\n\n          {/* User profile */}\n          <div className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex items-center space-x-3 p-3 rounded-lg bg-gray-50 border border-gray-200 hover:shadow-sm transition-all duration-300\">\n              <Avatar className=\"w-10 h-10 ring-2 ring-green-200 ring-offset-1\">\n                <AvatarImage src=\"\" />\n                <AvatarFallback className=\"bg-green-600 text-white text-sm font-bold\">\n                  {user?.name?.split(' ').map(n => n[0]).join('').toUpperCase() || 'FA'}\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-semibold text-gray-900 truncate\">{user?.name || 'Forest Admin'}</p>\n                <p className=\"text-xs text-gray-600 truncate\">{user?.email || 'admin@fra.gov.in'}</p>\n                <p className=\"text-xs text-green-600 capitalize truncate\">{user?.role || 'admin'}</p>\n              </div>\n              <div className=\"flex flex-col space-y-1\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"hover:bg-green-100 hover:text-green-700 transition-colors duration-200 rounded-lg p-2\"\n                >\n                  <Settings className=\"w-4 h-4\" />\n                </Button>\n                <AlertDialog>\n                  <AlertDialogTrigger asChild>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"hover:bg-red-100 hover:text-red-700 transition-colors duration-200 rounded-lg p-2\"\n                    >\n                      <LogOut className=\"w-4 h-4\" />\n                    </Button>\n                  </AlertDialogTrigger>\n                  <AlertDialogContent>\n                    <AlertDialogHeader>\n                      <AlertDialogTitle>{t('auth.logout')}</AlertDialogTitle>\n                      <AlertDialogDescription>\n                        {t('auth.logoutConfirm')}\n                      </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                      <AlertDialogCancel>{t('common.cancel')}</AlertDialogCancel>\n                      <AlertDialogAction\n                        onClick={() => {\n                          logout();\n                          onNavigate?.('landing');\n                        }}\n                        className=\"bg-red-600 hover:bg-red-700\"\n                      >\n                        {t('auth.logout')}\n                      </AlertDialogAction>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialog>\n              </div>\n            </div>\n          </div>\n        </div>\n      </aside>\n\n      {/* Main content */}\n      <div className=\"flex-1 flex flex-col min-h-screen relative z-10 lg:ml-0\">\n        {/* Top bar */}\n        <header className=\"bg-white/95 backdrop-blur-xl border-b border-gray-200 px-4 lg:px-6 py-4 shadow-sm sticky top-0 z-30\">\n          <div className=\"flex items-center justify-between max-w-none\">\n            <div className=\"flex items-center space-x-4 flex-1\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"lg:hidden hover:bg-green-50 hover:text-green-700 transition-colors duration-200 rounded-lg\"\n                onClick={() => setSidebarOpen(true)}\n              >\n                <Menu className=\"w-5 h-5\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"hover:bg-green-50 hover:text-green-700 transition-colors duration-200 rounded-lg\"\n                title={t('nav.backToHome')}\n                onClick={() => onNavigate?.('landing')}\n              >\n                <ArrowLeft className=\"w-5 h-5\" />\n              </Button>\n              <div className=\"relative group flex-1 max-w-md\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 group-focus-within:text-green-600 transition-colors duration-200\" />\n                <Input\n                  placeholder={t('search.placeholder')}\n                  className=\"pl-10 w-full h-10 bg-white border-gray-300 focus:border-green-500 focus:ring-green-500/20 rounded-lg shadow-sm hover:shadow-md transition-all duration-300\"\n                />\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2 ml-4\">\n              <LanguageSwitcher />\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"relative hover:bg-green-50 hover:text-green-700 transition-colors duration-200 rounded-lg p-2\"\n              >\n                <Bell className=\"w-5 h-5\" />\n                <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full text-xs flex items-center justify-center text-white font-bold shadow-sm text-[10px]\">3</span>\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"hover:bg-green-50 hover:text-green-700 transition-colors duration-200 rounded-lg p-2\"\n              >\n                <User className=\"w-5 h-5\" />\n              </Button>\n            </div>\n          </div>\n        </header>\n\n        {/* Main content area */}\n        <main className=\"flex-1 p-4 lg:p-6 overflow-auto bg-gray-50/30\">\n          <div className=\"max-w-full mx-auto w-full\">\n            {children}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4085, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/fra-atlas.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport shp from \"shpjs\";\nimport L from \"leaflet\";\nimport \"leaflet-draw\";\nimport leafletImage from \"leaflet-image\";\n\nexport default function FRAAtlasPage() {\n  const mapRef = useRef<L.Map | null>(null);\n  const drawnItemsRef = useRef<L.FeatureGroup>(new L.FeatureGroup());\n  const districtLayerRef = useRef<L.GeoJSON<any> | null>(null);\n  const villageLayerRef = useRef<L.GeoJSON<any> | null>(null);\n\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    if (mapRef.current) return; // prevent reinit on HMR\n\n    // --- Init Map ---\n    const map = L.map(\"map\").setView([23.5, 78.5], 6);\n    mapRef.current = map;\n\n    // --- Base layers ---\n    const osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n      attribution: \"© OpenStreetMap\",\n    }).addTo(map);\n\n    const esriSat = L.tileLayer(\n      \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n      { attribution: \"© Esri, Maxar, Earthstar Geographics\" }\n    );\n    const esriLabels = L.tileLayer(\n      \"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\",\n      { attribution: \"© Esri\" }\n    );\n    const satelliteHybrid = L.layerGroup([esriSat, esriLabels]);\n\n    const baseMaps = {\n      OpenStreetMap: osm,\n      \"Satellite Hybrid\": satelliteHybrid,\n    };\n    L.control.layers(baseMaps).addTo(map);\n\n    // --- Load Districts ---\n    fetch(\"/assets/india_dist_demo.geojson\")\n      .then((res) => res.json())\n      .then((data) => {\n        districtLayerRef.current = L.geoJSON(data, {\n          style: { color: \"blue\", weight: 2, fillOpacity: 0 },\n        });\n      });\n\n    // --- Load Villages ---\n    fetch(\"/assets/india_village_demo.geojson\")\n      .then((res) => res.json())\n      .then((data) => {\n        villageLayerRef.current = L.geoJSON(data, {\n          style: { color: \"red\", weight: 1, fillOpacity: 0 },\n        });\n      });\n\n    // --- Mouse coords display ---\n    const coordsDiv = document.getElementById(\"coords\");\n    map.on(\"mousemove\", (e: L.LeafletMouseEvent) => {\n      if (coordsDiv) {\n        coordsDiv.innerHTML = `Lat: ${e.latlng.lat.toFixed(5)} , Lng: ${e.latlng.lng.toFixed(5)}`;\n      }\n    });\n\n    // --- Shapefile upload ---\n    const fileInput = document.getElementById(\"shapefileUpload\") as HTMLInputElement;\n    fileInput?.addEventListener(\"change\", (e: Event) => {\n      const target = e.target as HTMLInputElement;\n      const file = target.files?.[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = function () {\n        shp(reader.result as ArrayBuffer).then((geojson) => {\n          const fraPattaLayer = L.geoJSON(geojson as any, {\n            style: { color: \"purple\", weight: 3, fillOpacity: 0 },\n            onEachFeature: (feature, layer) => {\n              if (feature.properties) {\n                layer.bindPopup(JSON.stringify(feature.properties));\n              }\n            },\n          }).addTo(map);\n          map.fitBounds(fraPattaLayer.getBounds());\n        });\n      };\n      reader.readAsArrayBuffer(file);\n    });\n\n    // --- Leaflet.draw ---\n    const drawnItems = drawnItemsRef.current;\n    map.addLayer(drawnItems);\n\n    const drawControl = new L.Control.Draw({\n      edit: { featureGroup: drawnItems, remove: true },\n      draw: {\n        polygon: { allowIntersection: false, showArea: true, shapeOptions: { color: \"green\" } },\n        rectangle: { shapeOptions: { color: \"orange\" } },\n        polyline: false,\n        circle: false,\n        marker: false,\n      },\n    });\n    map.addControl(drawControl);\n\n    map.on(L.Draw.Event.CREATED, (e: any) => {\n      const layer = e.layer;\n      drawnItems.addLayer(layer);\n      layer.bindPopup(\"Custom FRA Claim\").openPopup();\n      console.log(\"New shape:\", JSON.stringify(layer.toGeoJSON()));\n    });\n\n    map.on(L.Draw.Event.EDITED, (e: any) => {\n      e.layers.eachLayer((layer: any) => {\n        console.log(\"Edited shape:\", JSON.stringify(layer.toGeoJSON()));\n      });\n    });\n\n    map.on(L.Draw.Event.DELETED, (e: any) => {\n      console.log(\"Deleted shapes:\", e.layers.getLayers().length);\n    });\n\n    // --- Export GeoJSON ---\n    (window as any).exportToGeoJSON = () => {\n      const data = drawnItems.toGeoJSON();\n      const blob = new Blob([JSON.stringify(data)], { type: \"application/json\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"fra_claims.geojson\";\n      a.click();\n      URL.revokeObjectURL(url);\n    };\n\n    // --- Export Polygon Image ---\n    (window as any).exportPolygonImage = () => {\n      if (!mapRef.current) {\n        alert(\"Map not initialized!\");\n        return;\n      }\n      if (drawnItemsRef.current.getLayers().length === 0) {\n        alert(\"No drawn polygon found!\");\n        return;\n      }\n\n      const map = mapRef.current;\n      const polygon = drawnItemsRef.current.getLayers()[0] as L.Polygon;\n\n      leafletImage(map, (err: any, canvas: HTMLCanvasElement) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n\n        const bounds = polygon.getBounds();\n        const nw = map.latLngToContainerPoint(bounds.getNorthWest());\n        const se = map.latLngToContainerPoint(bounds.getSouthEast());\n\n        const width = se.x - nw.x;\n        const height = se.y - nw.y;\n\n        const clippedCanvas = document.createElement(\"canvas\");\n        clippedCanvas.width = width;\n        clippedCanvas.height = height;\n        const ctx = clippedCanvas.getContext(\"2d\")!;\n\n        // Build clipping path\n        ctx.beginPath();\n        (polygon.getLatLngs()[0] as L.LatLng[]).forEach((latlng, i) => {\n          const point = map.latLngToContainerPoint(latlng);\n          const x = point.x - nw.x;\n          const y = point.y - nw.y;\n          if (i === 0) ctx.moveTo(x, y);\n          else ctx.lineTo(x, y);\n        });\n        ctx.closePath();\n        ctx.clip();\n\n        // Draw clipped map\n        ctx.drawImage(canvas, -nw.x, -nw.y);\n\n        // Download\n        const img = clippedCanvas.toDataURL(\"image/png\");\n        const a = document.createElement(\"a\");\n        a.href = img;\n        a.download = \"fra_polygon.png\";\n        a.click();\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"relative w-full h-screen\">\n      <div id=\"map\" className=\"w-full h-full\" />\n\n      {/* Hamburger Button (only when menu closed) */}\n      {!menuOpen && (\n        <button\n          onClick={() => setMenuOpen(true)}\n          className=\"absolute top-20 right-4 z-[2000] bg-white p-2 rounded shadow hover:bg-gray-100\"\n        >\n          <svg\n            className=\"w-6 h-6 text-gray-700\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 6h16M4 12h16M4 18h16\" />\n          </svg>\n        </button>\n      )}\n\n      {/* Side Menu */}\n      <div\n        className={`fixed top-0 right-0 h-full w-72 bg-white shadow-lg transform transition-transform duration-300 z-[1500] ${\n          menuOpen ? \"translate-x-0\" : \"translate-x-full\"\n        }`}\n      >\n        <div className=\"p-4 border-b flex justify-between items-center\">\n          <h2 className=\"font-semibold text-lg\">Asset Mapping</h2>\n          <button onClick={() => setMenuOpen(false)} className=\"text-gray-600 hover:text-gray-800\">\n            ✕\n          </button>\n        </div>\n\n        <div className=\"p-4\">\n          <img\n            src=\"/assets/sample_asset_map.jpeg\"\n            alt=\"Asset Map\"\n            className=\"rounded shadow mb-4\"\n          />\n          <img\n            src=\"/assets/sample_pie_chart.jpeg\"\n            alt=\"Pie Chart\"\n            className=\"rounded shadow mb-4\"\n          />\n          <div className=\"space-y-2 text-sm\">\n            <p><span className=\"font-semibold\">Background:</span> 22.23%</p>\n            <p><span className=\"font-semibold\">Bareland:</span> 0.00%</p>\n            <p><span className=\"font-semibold\">Rangeland:</span> 15.23%</p>\n            <p><span className=\"font-semibold\">Developed Space:</span> 0.34%</p>\n            <p><span className=\"font-semibold\">Road:</span> 0.00%</p>\n            <p><span className=\"font-semibold\">Tree:</span> 26.30%</p>\n            <p><span className=\"font-semibold\">Water:</span> 0.23%</p>\n            <p><span className=\"font-semibold\">Agriculture land:</span> 35.67%</p>\n            <p><span className=\"font-semibold\">Building:</span> 0.00%</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Checkboxes */}\n      <div className=\"absolute top-2 left-1/2 -translate-x-1/2 bg-white p-2 rounded shadow z-[1000] space-x-4\">\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={(e) => {\n              if (e.target.checked && districtLayerRef.current && mapRef.current) {\n                mapRef.current.addLayer(districtLayerRef.current);\n                mapRef.current.fitBounds(districtLayerRef.current.getBounds());\n              } else if (districtLayerRef.current && mapRef.current) {\n                mapRef.current.removeLayer(districtLayerRef.current);\n              }\n            }}\n          />{\" \"}\n          Show Districts\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={(e) => {\n              if (e.target.checked && villageLayerRef.current && mapRef.current) {\n                mapRef.current.addLayer(villageLayerRef.current);\n                mapRef.current.fitBounds(villageLayerRef.current.getBounds());\n              } else if (villageLayerRef.current && mapRef.current) {\n                mapRef.current.removeLayer(villageLayerRef.current);\n              }\n            }}\n          />{\" \"}\n          Show Villages\n        </label>\n      </div>\n\n      {/* Upload Shapefile */}\n      <div className=\"absolute top-20 left-1/2 -translate-x-1/2 bg-white p-2 rounded shadow z-[1000] text-center\">\n        <input type=\"file\" id=\"shapefileUpload\" accept=\".zip\" />\n        <p className=\"text-sm\">Upload FRA Shapefile (.zip)</p>\n      </div>\n\n      {/* Export Buttons */}\n      <div className=\"absolute top-40 left-1/2 -translate-x-1/2 bg-white p-2 rounded shadow z-[1000] flex space-x-2\">\n        <button\n          onClick={() => (window as any).exportToGeoJSON()}\n          className=\"px-4 py-1 bg-green-600 text-white rounded hover:bg-green-700\"\n        >\n          Export Drawn Claims (GeoJSON)\n        </button>\n        <button\n          onClick={() => (window as any).exportPolygonImage()}\n          className=\"px-4 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          Export Polygon Image\n        </button>\n      </div>\n\n      {/* Coordinates */}\n      <div\n        id=\"coords\"\n        className=\"absolute bottom-2 left-1/2 -translate-x-1/2 bg-white/90 px-3 py-1 rounded shadow text-sm z-[1000]\"\n      >\n        Lat: -- , Lng: --\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}