{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jubaraj/Desktop/banrakshak/banrakshak/frontend/src/app/pages/Allotments.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  TreePine,\n  MapPin,\n  Calendar,\n  User,\n  Ruler,\n  FileText,\n  Search,\n  Filter,\n  Plus,\n  Eye,\n  Edit,\n  Download,\n  CheckCircle,\n  Clock,\n  AlertTriangle\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/card';\nimport { Button } from '../../../components/ui/button';\nimport { Input } from '../../../components/ui/input';\nimport { Badge } from '../../../components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../../components/ui/table';\nimport { Progress } from '../../../components/ui/progress';\n\nconst allotmentsData = [\n  {\n    id: 'ALL-2024-001',\n    claimId: 'FRA-2024-001',\n    beneficiary: 'Ramesh Kumar',\n    village: 'Kotapalli',\n    district: 'Adilabad',\n    forestType: 'Dense Forest',\n    allottedArea: '2.5 hectares',\n    surveyNumber: 'SY-789',\n    allotmentDate: '2024-01-20',\n    validityPeriod: '10 years',\n    status: 'Active',\n    compliance: 95,\n    lastInspection: '2024-01-15'\n  },\n  {\n    id: 'ALL-2024-002',\n    claimId: 'FRA-2024-002',\n    beneficiary: 'Sunita Devi',\n    village: 'Dharmasagar',\n    district: 'Warangal',\n    forestType: 'Scrub Forest',\n    allottedArea: '1.8 hectares',\n    surveyNumber: 'SY-456',\n    allotmentDate: '2024-01-18',\n    validityPeriod: '10 years',\n    status: 'Active',\n    compliance: 88,\n    lastInspection: '2024-01-10'\n  },\n  {\n    id: 'ALL-2024-003',\n    claimId: 'FRA-2024-005',\n    beneficiary: 'Vinod Kumar',\n    village: 'Bhadrachalam',\n    district: 'Khammam',\n    forestType: 'Degraded Forest',\n    allottedArea: '4.0 hectares',\n    surveyNumber: 'SY-123',\n    allotmentDate: '2024-01-15',\n    validityPeriod: '10 years',\n    status: 'Under Review',\n    compliance: 72,\n    lastInspection: '2024-01-05'\n  },\n  {\n    id: 'ALL-2023-047',\n    claimId: 'FRA-2023-185',\n    beneficiary: 'Anjali Reddy',\n    village: 'Mulugu',\n    district: 'Khammam',\n    forestType: 'Mixed Forest',\n    allottedArea: '3.2 hectares',\n    surveyNumber: 'SY-234',\n    allotmentDate: '2023-12-10',\n    validityPeriod: '10 years',\n    status: 'Expired',\n    compliance: 65,\n    lastInspection: '2023-12-01'\n  }\n];\n\nconst forestTypes = ['All', 'Dense Forest', 'Scrub Forest', 'Degraded Forest', 'Mixed Forest'];\nconst statuses = ['All', 'Active', 'Under Review', 'Expired', 'Suspended'];\n\nexport function Allotments() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [forestTypeFilter, setForestTypeFilter] = useState('All');\n  const [statusFilter, setStatusFilter] = useState('All');\n\n  const getStatusBadge = (status: string) => {\n    const variants: { [key: string]: string } = {\n      'Active': 'bg-green-100 text-green-800 border-green-200',\n      'Under Review': 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      'Expired': 'bg-red-100 text-red-800 border-red-200',\n      'Suspended': 'bg-gray-100 text-gray-800 border-gray-200'\n    };\n\n    return (\n      <Badge className={`${variants[status]} border`}>\n        {status}\n      </Badge>\n    );\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'Active':\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'Under Review':\n        return <Clock className=\"w-4 h-4 text-yellow-500\" />;\n      case 'Expired':\n        return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      case 'Suspended':\n        return <AlertTriangle className=\"w-4 h-4 text-gray-500\" />;\n      default:\n        return <Clock className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getComplianceColor = (compliance: number) => {\n    if (compliance >= 90) return 'text-green-600';\n    if (compliance >= 70) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const filteredAllotments = allotmentsData.filter(allotment => {\n    const matchesSearch = allotment.beneficiary.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         allotment.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         allotment.village.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesForestType = forestTypeFilter === 'All' || allotment.forestType === forestTypeFilter;\n    const matchesStatus = statusFilter === 'All' || allotment.status === statusFilter;\n\n    return matchesSearch && matchesForestType && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Forest Allotments</h1>\n          <p className=\"text-gray-600\">Manage and monitor forest land allotments</p>\n        </div>\n        <Button className=\"bg-gradient-to-r from-green-600 to-emerald-700 hover:from-green-700 hover:to-emerald-800\">\n          <Plus className=\"w-4 h-4 mr-2\" />\n          New Allotment\n        </Button>\n      </div>\n\n      {/* Quick stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-green-700\">Total Allotments</p>\n                <p className=\"text-2xl font-bold text-green-900\">892</p>\n              </div>\n              <TreePine className=\"w-8 h-8 text-green-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-blue-700\">Active</p>\n                <p className=\"text-2xl font-bold text-blue-900\">756</p>\n              </div>\n              <CheckCircle className=\"w-8 h-8 text-blue-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-yellow-50 to-yellow-100 border-yellow-200\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-yellow-700\">Under Review</p>\n                <p className=\"text-2xl font-bold text-yellow-900\">89</p>\n              </div>\n              <Clock className=\"w-8 h-8 text-yellow-600\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-purple-700\">Total Area</p>\n                <p className=\"text-2xl font-bold text-purple-900\">2,156</p>\n                <p className=\"text-xs text-purple-600\">hectares</p>\n              </div>\n              <Ruler className=\"w-8 h-8 text-purple-600\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Forest type distribution */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card className=\"bg-white/60 backdrop-blur-sm border-gray-200\">\n          <CardHeader>\n            <CardTitle>Forest Type Distribution</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {[\n              { type: 'Dense Forest', count: 245, percentage: 35 },\n              { type: 'Mixed Forest', count: 198, percentage: 28 },\n              { type: 'Scrub Forest', count: 156, percentage: 22 },\n              { type: 'Degraded Forest', count: 105, percentage: 15 }\n            ].map((item) => (\n              <div key={item.type} className=\"space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>{item.type}</span>\n                  <span>{item.count} allotments ({item.percentage}%)</span>\n                </div>\n                <Progress value={item.percentage} className=\"h-2\" />\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-white/60 backdrop-blur-sm border-gray-200\">\n          <CardHeader>\n            <CardTitle>Compliance Overview</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {[\n              { range: 'Excellent (90-100%)', count: 456, color: 'bg-green-500' },\n              { range: 'Good (70-89%)', count: 287, color: 'bg-yellow-500' },\n              { range: 'Needs Improvement (<70%)', count: 149, color: 'bg-red-500' }\n            ].map((item) => (\n              <div key={item.range} className=\"flex items-center justify-between p-3 rounded-lg bg-gray-50/50\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full ${item.color}`}></div>\n                  <span className=\"text-sm\">{item.range}</span>\n                </div>\n                <span className=\"font-medium\">{item.count}</span>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card className=\"bg-white/60 backdrop-blur-sm border-gray-200\">\n        <CardContent className=\"p-6\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search by allotment ID, beneficiary, or village...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 bg-white/80 border-gray-200\"\n              />\n            </div>\n            <Select value={forestTypeFilter} onValueChange={setForestTypeFilter}>\n              <SelectTrigger className=\"w-full sm:w-48 bg-white/80 border-gray-200\">\n                <SelectValue placeholder=\"Forest Type\" />\n              </SelectTrigger>\n              <SelectContent>\n                {forestTypes.map(type => (\n                  <SelectItem key={type} value={type}>{type}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"w-full sm:w-48 bg-white/80 border-gray-200\">\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                {statuses.map(status => (\n                  <SelectItem key={status} value={status}>{status}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Button variant=\"outline\" className=\"bg-white/80 border-gray-200\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Allotments table */}\n      <Card className=\"bg-white/60 backdrop-blur-sm border-gray-200\">\n        <CardHeader>\n          <CardTitle>Allotment Records ({filteredAllotments.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Allotment ID</TableHead>\n                  <TableHead>Beneficiary</TableHead>\n                  <TableHead>Location</TableHead>\n                  <TableHead>Forest Type</TableHead>\n                  <TableHead>Area</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Compliance</TableHead>\n                  <TableHead>Validity</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredAllotments.map((allotment) => (\n                  <TableRow key={allotment.id} className=\"hover:bg-gray-50/50\">\n                    <TableCell className=\"font-mono font-medium\">{allotment.id}</TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <User className=\"w-4 h-4 text-gray-400\" />\n                        <div>\n                          <div className=\"font-medium\">{allotment.beneficiary}</div>\n                          <div className=\"text-sm text-gray-500 font-mono\">{allotment.claimId}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <MapPin className=\"w-4 h-4 text-gray-400\" />\n                        <div>\n                          <div className=\"font-medium\">{allotment.village}</div>\n                          <div className=\"text-sm text-gray-500\">{allotment.district}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <TreePine className=\"w-4 h-4 text-green-500\" />\n                        <span>{allotment.forestType}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <Ruler className=\"w-4 h-4 text-gray-400\" />\n                        <span>{allotment.allottedArea}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        {getStatusIcon(allotment.status)}\n                        {getStatusBadge(allotment.status)}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className={`font-medium ${getComplianceColor(allotment.compliance)}`}>\n                          {allotment.compliance}%\n                        </span>\n                        <div className=\"w-16\">\n                          <Progress value={allotment.compliance} className=\"h-1\" />\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <Calendar className=\"w-4 h-4 text-gray-400\" />\n                        <div>\n                          <div className=\"text-sm\">{allotment.validityPeriod}</div>\n                          <div className=\"text-xs text-gray-500\">\n                            Since {allotment.allotmentDate}\n                          </div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center space-x-2\">\n                        <Button size=\"sm\" variant=\"ghost\">\n                          <Eye className=\"w-4 h-4\" />\n                        </Button>\n                        <Button size=\"sm\" variant=\"ghost\">\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button size=\"sm\" variant=\"ghost\">\n                          <FileText className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}